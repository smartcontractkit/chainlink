{{- range $cfg := .Values.chainlink.nodes }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Release.Name }}-{{ $cfg.name }}
spec:
  selector:
    matchLabels:
      app: {{ $.Release.Name }}
      instance: {{ $cfg.name }}
      release: {{ $.Release.Name }}
  template:
    metadata:
      labels:
        app: {{ $.Release.Name }}
        instance: {{ $cfg.name }}
        release: {{ $.Release.Name }}
        {{- range $key, $value := $.Values.labels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      annotations:
        prometheus.io/scrape: 'true'
        {{- range $key, $value := $.Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
    spec:
      volumes:
        - name: {{ $.Release.Name }}-{{ $cfg.name }}-cm
          configMap:
            name: {{ $.Release.Name }}-{{ $cfg.name }}-cm
      securityContext:
        {{- toYaml $.Values.chainlink.podSecurityContext | nindent 8 }}
      containers:
        - name: node
          securityContext:
            {{- toYaml $.Values.chainlink.securityContext | nindent 12 }}
          image: {{ default "public.ecr.aws/chainlink/chainlink" $cfg.image }}
          imagePullPolicy: Always
          command: ["bash", "-c", "while ! pg_isready -U postgres --host localhost --port 5432; do echo \"waiting for database to start\"; sleep 1; done && chainlink -c /etc/node-secrets-volume/default.toml -c /etc/node-secrets-volume/overrides.toml -secrets /etc/node-secrets-volume/secrets.toml node start -d -p /etc/node-secrets-volume/node-password -a /etc/node-secrets-volume/apicredentials --vrfpassword=/etc/node-secrets-volume/apicredentials"]
          ports:
            - name: access
              containerPort: {{ $.Values.chainlink.web_port }}
            - name: p2p
              containerPort: {{ $.Values.chainlink.p2p_port }}
          env:
            - name: CL_DATABASE_URL
              value: postgresql://postgres:verylongdatabasepassword@localhost/chainlink?sslmode=disable
            - name: CL_DEV
              value: "false"
          volumeMounts:
            - name: {{ $.Release.Name }}-{{ $cfg.name }}-cm
              mountPath: /etc/node-secrets-volume/
          livenessProbe:
            httpGet:
              path: /health
              port: {{ $.Values.chainlink.web_port }}
            initialDelaySeconds: 1
            periodSeconds: 5
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: {{ $.Values.chainlink.web_port }}
            initialDelaySeconds: 1
            periodSeconds: 5
            timeoutSeconds: 10
          startupProbe:
            httpGet:
              path: /
              port: {{ $.Values.chainlink.web_port }}
            initialDelaySeconds: 15
            periodSeconds: 5
            failureThreshold: 20
          {{ if (hasKey $.Values.chainlink "resources") }}
          resources:
            requests:
              memory: {{ default "1024Mi" $.Values.chainlink.resources.requests.memory }}
              cpu: {{ default "500m" $.Values.chainlink.resources.requests.cpu }}
            limits:
              memory: {{ default "1024Mi" $.Values.chainlink.resources.limits.memory }}
              cpu: {{ default "500m" $.Values.chainlink.resources.limits.cpu }}
          {{ else }}
          {{ end }}
{{- with $.Values.nodeSelector }}
      nodeSelector:
        {{ toYaml . | indent 8 }}
{{- end }}
{{- with $.Values.affinity }}
      affinity:
        {{ toYaml . | indent 8 }}
{{- end }}
{{- with $.Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
---
{{- end }}
