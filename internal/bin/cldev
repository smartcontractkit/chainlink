#!/bin/bash

# Runs a Chainlink (CL) node preconfigured to communicate with gethnet.
# Steps:
# 1. ./internal/bin/gethnet
# 2. yarn install
# 3. cd solidity && truffle migrate && cd ..
# 4. ./internal/bin/cldev

set -e

GIT_ROOT=`git rev-parse --show-toplevel`
PROJECT_ROOT=${TRAVIS_BUILD_DIR:-$GIT_ROOT}
LDFLAGS=`$PROJECT_ROOT/internal/bin/ldflags`

pushd $PROJECT_ROOT >/dev/null
source internal/bin/clenv
export ROOT=$PROJECT_ROOT/internal/clroot
DEFAULT_KEY_PATH=$ROOT/keys/UTC--2017-01-05T20-42-24.637Z--9ca9d2d5e04012c9ed24c0e513c9bfaa4a2dd77f

mainexec() {
  mkdir -p tmp
  go build -o tmp/cldevbuild -ldflags "$LDFLAGS" main.go
  tmp/cldevbuild $@
}

if [ "$#" == 0 ]; then
  ## Build React GUI and then run CL node
  CHAINLINK_VERSION="$(mainexec --version)"
  export CHAINLINK_VERSION

  pushd gui >/dev/null
  yarn install --no-progress | cat
  yarn build | cat
  popd >/dev/null
  mainexec import $DEFAULT_KEY_PATH
  mainexec node -d -p $ROOT/password.txt -a $ROOT/apicredentials
  exit
fi

case "$1" in
  node | n)
    echo "** Importing default key 0x9ca9d2d5e04012c9ed24c0e513c9bfaa4a2dd77f"
    mainexec import $DEFAULT_KEY_PATH
    echo "** Running node"
    mainexec node -d -p $ROOT/password.txt -a $ROOT/apicredentials ${@:2}
    ;;
  clean)
    rm -f $ROOT/db.sqlite3 $ROOT/log.jsonl
    rm -f tmp/cldevbuild
    ;;
  *)
    mainexec $@
    ;;
esac
