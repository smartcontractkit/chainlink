# This file specifies the GitHub runner for each E2E test and is utilized by all E2E CI workflows.
#
# Each entry in this file includes the following:
# - The GitHub runner (runs-on field) that will execute tests.
# - The tests that will be run by the runner.
# - The workflows (e.g., Run PR E2E Tests, Run Nightly E2E Tests) that should trigger these tests.
#
runner-test-matrix:

  # START: OCR tests

  # Example of 1 runner for all tests in integration-tests/smoke/ocr_test.go
  - id: smoke/ocr_test.go:* 
    path: integration-tests/smoke/ocr_test.go
    test_env_type: docker
    runs-on: ubuntu-latest
    workflows:
      - Run PR E2E Tests
      - Run Nightly E2E Tests
    test-cmd: cd integration-tests/ && go test smoke/ocr_test.go -timeout 30m -count=1 -json
    pyroscope-env: ci-smoke-ocr-evm-simulated-nightly

  # Example of 2 separate runners for the same test file but different tests. Can be used if tests if are too heavy to run on the same runner
  - id: smoke/ocr2_test.go:^TestOCRv2Request$
    path: integration-tests/smoke/ocr2_test.go
    test_env_type: docker
    runs-on: ubuntu-latest
    workflows:
      - Run PR E2E Tests
      - Run Nightly E2E Tests
    test-cmd: cd integration-tests/ && go test smoke/ocr2_test.go -test.run ^TestOCRv2Request$ -test.parallel=1 -timeout 30m -count=1 -json
    pyroscope-env: ci-smoke-ocr2-evm-simulated-nightly

  - id: smoke/ocr2_test.go:^TestOCRv2Basic$
    path: integration-tests/smoke/ocr2_test.go
    test_env_type: docker
    runs-on: ubuntu-latest
    workflows:
      - Run PR E2E Tests
      - Run Nightly E2E Tests
    test-cmd: cd integration-tests/ && go test smoke/ocr2_test.go -test.run ^TestOCRv2Basic$ -test.parallel=1 -timeout 30m -count=1 -json
    pyroscope-env: ci-smoke-ocr2-evm-simulated-nightly

  # Example of a configuration for running a single soak test in Kubernetes Remote Runner
  - id: soak/ocr_test.go:^TestOCRv1Soak$
    path: integration-tests/soak/ocr_test.go
    test_env_type: k8s-remote-runner
    runs-on: ubuntu-latest
    test-cmd: cd integration-tests/ && go test soak/ocr_test.go -v -test.run ^TestOCRv1Soak$ -test.parallel=1 -timeout 30m -count=1
    test_inputs:
      test_suite: soak

  - id: soak/ocr_test.go:^TestOCRv2Soak$
    path: integration-tests/soak/ocr_test.go
    test_env_type: k8s-remote-runner
    runs-on: ubuntu-latest
    test-cmd: cd integration-tests/ && go test soak/ocr_test.go -v -test.run ^TestOCRv2Soak$ -test.parallel=1 -timeout 30m -count=1
    test-config-override-required: true
    test-secrets-required: true
    test_inputs:
      test_suite: soak

  # END: OCR tests

  # START: Automation tests
  
  - id: integration-tests/load/automationv2_1/automationv2_1_test.go:TestLogTrigger
    path: integration-tests/load/automationv2_1/automationv2_1_test.go
    runs-on: ubuntu-latest
    test_env_type: k8s-remote-runner
    test-cmd: cd integration-tests/load/automationv2_1 && go test -test.run TestLogTrigger -test.parallel=1 -timeout 60m -count=1 -json
    remote-runner-memory: 4Gi
    test-config-override-required: true
    test-secrets-required: true
    test_inputs:
      test_suite: automationv2_1
    workflows:
      - Automation Load Test
    pyroscope-env: automation-load-test

  - id: smoke/automation_upgrade_test.go:^TestAutomationNodeUpgrade/registry_2_0
    path: integration-tests/smoke/automation_upgrade_test.go
    test_env_type: docker
    runs-on: ubuntu22.04-8cores-32GB
    workflows:
      - Run Automation Product Nightly E2E Tests
    test-cmd: cd integration-tests/smoke && go test -test.run ^TestAutomationNodeUpgrade/registry_2_0 -test.parallel=1 -timeout 60m -count=1 -json
    default-test_inputs:
      chainlinkImage: public.ecr.aws/chainlink/chainlink
      chainlinkVersion: latest
      chainlinkUpgradeImage: '{{ env.QA_CHAINLINK_IMAGE }}'
      chainlinkUpgradeVersion: develop
    pyroscope-env: ci-smoke-automation-upgrade-tests

  - id: smoke/automation_upgrade_test.go:^TestAutomationNodeUpgrade/registry_2_1
    path: integration-tests/smoke/automation_upgrade_test.go
    test_env_type: docker
    runs-on: ubuntu22.04-8cores-32GB
    workflows:
      - Run Automation Product Nightly E2E Tests    
    test-cmd: cd integration-tests/smoke && go test -test.run ^TestAutomationNodeUpgrade/registry_2_1 -test.parallel=5 -timeout 60m -count=1 -json
    default-test_inputs:
      chainlinkImage: public.ecr.aws/chainlink/chainlink
      chainlinkVersion: latest
      chainlinkUpgradeImage: '{{ env.QA_CHAINLINK_IMAGE }}'
      chainlinkUpgradeVersion: develop
    pyroscope-env: ci-smoke-automation-upgrade-tests

  - id: smoke/automation_upgrade_test.go:^TestAutomationNodeUpgrade/registry_2_2
    path: integration-tests/smoke/automation_upgrade_test.go
    test_env_type: docker
    runs-on: ubuntu22.04-8cores-32GB
    workflows:
      - Run Automation Product Nightly E2E Tests
    test-cmd: cd integration-tests/smoke && go test -test.run ^TestAutomationNodeUpgrade/registry_2_2 -test.parallel=5 -timeout 60m -count=1 -json
    default-test_inputs:
      chainlinkImage: public.ecr.aws/chainlink/chainlink
      chainlinkVersion: latest
      chainlinkUpgradeImage: '{{ env.QA_CHAINLINK_IMAGE }}'
      chainlinkUpgradeVersion: develop
    pyroscope-env: ci-smoke-automation-upgrade-tests

  - id: integration-tests/reorg/automation_reorg_test.go
    path: integration-tests/reorg/automation_reorg_test.go
    runs-on: ubuntu-latest
    test_env_type: k8s-remote-runner
    test_inputs:
      test_suite: reorg
    workflows:
      # - Run Automation Product Nightly E2E Tests
    test-cmd: cd integration-tests/reorg && go test -v -test.run ^TestAutomationReorg$ -test.parallel=5 -timeout 60m -count=1
    pyroscope-env: ci-automation-on-demand-reorg

  - id: integration-tests/chaos/automation_chaos_test.go
    path: integration-tests/chaos/automation_chaos_test.go
    test_env_type: k8s-remote-runner
    runs-on: ubuntu-latest
    workflows:
      # - Run Automation Product Nightly E2E Tests
    test-cmd: cd integration-tests/chaos && go test -v -test.run ^TestAutomationChaos$ -test.parallel=15 -timeout 60m -count=1
    pyroscope-env: ci-automation-on-demand-chaos
    test_inputs:
      test_suite: chaos

  - id: integration-tests/benchmark/keeper_test.go:^TestAutomationBenchmark$
    path: integration-tests/benchmark/keeper_test.go
    test_env_type: k8s-remote-runner
    remote-runner-memory: 4Gi
    runs-on: ubuntu-latest
    # workflows:
    #   - Run Nightly E2E Tests
    test-cmd: cd integration-tests/benchmark && go test -v -test.run ^TestAutomationBenchmark$ -test.parallel=1 -timeout 30m -count=1
    pyroscope-env: ci-benchmark-automation-nightly
    test_inputs:
      test_suite: benchmark

  # END: Automation tests

  # START: VRF tests

  - id: integration-tests/smoke/vrfv2_test.go:TestVRFv2Basic
    path: integration-tests/smoke/vrfv2_test.go
    runs-on: ubuntu22.04-8cores-32GB
    test_env_type: docker
    test-cmd: cd integration-tests/smoke && go test -v -test.run TestVRFv2Basic -test.parallel=1 -timeout 30m -count=1
    test-config-override-required: true
    test-secrets-required: true
    workflows:
      - On Demand VRFV2 Smoke Test (Ethereum clients)

  - id: integration-tests/load/vrfv2plus/vrfv2plus_test.go:^TestVRFV2PlusPerformance$Smoke
    path: integration-tests/load/vrfv2plus/vrfv2plus_test.go
    runs-on: ubuntu22.04-8cores-32GB
    test_env_type: docker
    test-cmd: cd integration-tests/load/vrfv2plus && go test -v -test.run ^TestVRFV2PlusPerformance$ -test.parallel=1 -timeout 24h -count=1
    test-config-override-required: true
    test-secrets-required: true
    test_inputs:
      test_type: Smoke
    workflows:
      - On Demand VRFV2 Plus Performance Test          

  - id: integration-tests/load/vrfv2plus/vrfv2plus_test.go:^TestVRFV2PlusBHSPerformance$Smoke
    path: integration-tests/load/vrfv2plus/vrfv2plus_test.go
    runs-on: ubuntu22.04-8cores-32GB
    test_env_type: docker
    test-cmd: cd integration-tests/load/vrfv2plus && go test -v -test.run ^TestVRFV2PlusBHSPerformance$ -test.parallel=1 -timeout 24h -count=1
    test-config-override-required: true
    test-secrets-required: true
    test_inputs:
      test_type: Smoke
    workflows:
      - On Demand VRFV2 Plus Performance Test  

  - id: integration-tests/load/vrfv2/vrfv2_test.go:^TestVRFV2Performance$Smoke
    path: integration-tests/load/vrfv2/vrfv2_test.go
    runs-on: ubuntu22.04-8cores-32GB
    test_env_type: docker
    test-cmd: cd integration-tests/load/vrfv2 && go test -v -test.run ^TestVRFV2Performance$ -test.parallel=1 -timeout 24h -count=1
    test-config-override-required: true
    test-secrets-required: true
    test_inputs:
      test_type: Smoke      
    workflows:
      - On Demand VRFV2 Performance Test      

  - id: integration-tests/load/vrfv2/vrfv2_test.go:^TestVRFV2PlusBHSPerformance$Smoke
    path: integration-tests/load/vrfv2/vrfv2_test.go
    runs-on: ubuntu22.04-8cores-32GB
    test_env_type: docker
    test-cmd: cd integration-tests/load/vrfv2 && go test -v -test.run ^TestVRFV2PlusBHSPerformance$ -test.parallel=1 -timeout 24h -count=1
    test-config-override-required: true
    test-secrets-required: true
    test_inputs:
      test_type: Smoke
    workflows:
      - On Demand VRFV2 Performance Test

  - id: integration-tests/smoke/vrfv2plus_test.go:^TestVRFv2Plus$/^Link_Billing$
    path: integration-tests/smoke/vrfv2plus_test.go
    runs-on: ubuntu22.04-8cores-32GB
    test_env_type: docker
    test-cmd: cd integration-tests && go test -v -test.run ^TestVRFv2Plus$/^Link_Billing$ smoke/vrfv2plus_test.go -test.parallel=1 -timeout 30m -count=1
    test-config-override-required: true
    test-secrets-required: true
    workflows:
      - On Demand VRFV2Plus Smoke Test (Ethereum clients)

  # END: VRF tests
