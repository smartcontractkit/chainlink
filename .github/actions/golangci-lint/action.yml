name: CI lint for Golang
description: Runs CI lint for Golang
inputs:
  # general inputs
  id:
    description: Unique metrics collection id
    required: true
  name:
    description: Name of the lint action
    required: true
  go-directory:
    description: Go directory to run commands from
    default: "."
  # setup-go inputs
  only-modules:
    description: Set to 'true' to only cache modules
    default: "false"
  cache-version:
    description: Set this to cache bust
    default: "1"
  go-version-file:
    description: Set where the go version file is located at
    default: "go.mod"
  go-module-file:
    description: Set where the go module file is located at
    default: "go.sum"
  # grafana inputs
  gc-host:
    description: "grafana hostname"
  gc-basic-auth:
    description: "grafana basic auth"
  gc-org-id:
    description: "grafana org id"

runs:
  using: composite
  steps:
    - uses: actions/checkout@v4.2.1
      with:
        # We only need a full clone on merge_group events for golangci-lint.
        fetch-depth: ${{ github.event_name == 'merge_group' && '0' || '1' }}"
    - name: Setup Go
      uses: ./.github/actions/setup-go
      with:
        only-modules: ${{ inputs.only-modules }}
        cache-version: ${{ inputs.cache-version }}
        go-version-file: ${{ inputs.go-version-file }}
        go-module-file: ${{ inputs.go-module-file }}
    - name: Touching core/web/assets/index.html
      shell: bash
      run: mkdir -p core/web/assets && touch core/web/assets/index.html
    - name: Build binary
      working-directory: ${{ inputs.go-directory }}
      shell: bash
      run: go build ./...
    - name: Set golangci-lint working directory
      shell: bash
      id: set-working-directory
      # XXX: Don't use `.` default working directory here due to issues with the golangci-lint-action.
      run: |
        if [ "${{ inputs.go-directory }}" == "." ]; then
          echo "golangci-lint-working-directory=" | tee -a $GITHUB_OUTPUT
        else
          echo "golangci-lint-working-directory=${{ inputs.go-directory }}" | tee -a $GITHUB_OUTPUT
        fi
    - name: golangci-lint
      uses: golangci/golangci-lint-action@38e1018663fa5173f3968ea0777460d3de38f256 # v5.3.0
      with:
        version: v1.60.3
        only-new-issues: true
        args: --out-format colored-line-number,checkstyle:golangci-lint-report.xml
        working-directory: ${{ steps.set-working-directory.outputs.golangci-lint-working-directory }}
    - name: Print lint report artifact
      if: failure()
      shell: bash
      run: cat ${{ inputs.go-directory }}/golangci-lint-report.xml
    - name: Store lint report artifact
      if: always()
      uses: actions/upload-artifact@v4.4.3
      with:
        name: golangci-lint-report
        path: ${{ inputs.go-directory }}/golangci-lint-report.xml
        retention-days: 7
    - name: Collect Metrics
      if: always()
      uses: smartcontractkit/push-gha-metrics-action@d9da21a2747016b3e13de58c7d4115a3d5c97935 # v3.0.1
      with:
        id: chainlink-golang-ci-${{ inputs.id }}
        basic-auth: ${{ inputs.gc-basic-auth }}
        hostname: ${{ inputs.gc-host }}
        org-id: ${{ inputs.gc-org-id }}
        this-job-name: ${{ inputs.name }}
      continue-on-error: true
