name: Build and Publish Chainlink

description: A composite action that allows building and publishing chainlink images. Note that this action only supports public ECR repositories. The value of the registry to login to in the docker/login-action setup is hardcoded to 'public.ecr.aws'

inputs:
  # Inputs for publishing
  publish:
    description: When set to the string boolean value of "true", the resulting built image will be published
    default: "false" 
    required: false
  
  image-name:
    description: The name of the image, should match the repository name in ECR
    required: true
  
  ecr-registry:
    description: The ECR registry to push to, used in docker/login-action and for tagging images
    default: public.ecr.aws/chainlink
    required: false 
  aws-access-key-id:
    description: The IAM access key used to authenticate to ECR, used in configuring docker/login-action
    required: false
  aws-secret-access-key:
    description: The IAM access key secret used to authenticate to ECR, used in configuring docker/login-action
    required: false
  aws-role-to-assume:
    description: The AWS role to assume as the CD user, if any. Used in configuring the docker/login-action
    required: false
  aws-role-duration-seconds:
    description: The duration of the role assumed
    required: false
  aws-region: 
    description: The AWS region the ECR repository is located in, should only be needed for public ECR repositories, used in configuring docker/login-action
    required: false    

runs:
  using: composite
  steps:
  - name: Set shared variables
    shell: sh
    # See https://docs.github.com/en/actions/learn-github-actions/workflow-commands-for-github-actions#multiline-strings
    run: |
      SHARED_IMAGES=${{ inputs.ecr-registry }}/${{ inputs.image-name }}

      SHARED_TAG_LIST=$(cat << EOF
      type=ref,event=branch
      type=semver,pattern={{version}}
      type=sha,format=short
      EOF
      )

      SHARED_BUILD_ARGS=$(cat << EOF
      COMMIT_SHA:${{ github.sha }}
      ENVIRONMENT:release
      EOF
      )

      echo "shared-images<<EOF" >> $GITHUB_ENV
      echo "$SHARED_IMAGES" >> $GITHUB_ENV
      echo "EOF" >> $GITHUB_ENV

      echo "shared-tag-list<<EOF" >> $GITHUB_ENV
      echo "$SHARED_TAG_LIST" >> $GITHUB_ENV
      echo "EOF" >> $GITHUB_ENV

      echo "shared-build-args<<EOF" >> $GITHUB_ENV
      echo "$SHARED_BUILD_ARGS" >> $GITHUB_ENV
      echo "EOF" >> $GITHUB_ENV

  - if: inputs.publish == 'true'
    name: Configure AWS Credentials
    uses: aws-actions/configure-aws-credentials@ea7b857d8a33dc2fb4ef5a724500044281b49a5e # v1.6.0
    with:
      aws-access-key-id: ${{ inputs.aws-access-key-id }}
      aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
      role-to-assume: ${{ inputs.aws-role-to-assume }}
      role-duration-seconds: ${{ inputs.aws-role-duration-seconds }}
      aws-region: ${{ inputs.aws-region }}

  - if: inputs.publish == 'true'
    name: Login to ECR
    uses: docker/login-action@42d299face0c5c43a0487c477f595ac9cf22f1a7 # v1.12.0
    with:
      registry: public.ecr.aws

  - name: Setup Docker Buildx
    uses: docker/setup-buildx-action@94ab11c41e45d028884a99163086648e898eed25 # v1.6.0
  
  - name: Generate docker metadata for root image
    id: meta-root
    uses: docker/metadata-action@e5622373a38e60fb6d795a4421e56882f2d7a681 # v3.6.2
    with:
      # list of Docker images to use as base name for tags
      images: ${{ env.shared-images }}
      tags: ${{ env.shared-tag-list }}
      
  
  - name: Build and push root docker image
    uses: docker/build-push-action@a66e35b9cbcf4ad0ea91ffcaf7bbad63ad9e0229 # v2.7.0
    with:
      push: ${{ inputs.publish }}
      tags: ${{ steps.meta-root.outputs.tags }}
      labels: ${{ steps.meta-root.outputs.labels }}
      file: core/chainlink.Dockerfile
      build-args: |
        CHAINLINK_USER:root
        ${{ env.shared-build-args }}
  
  - name: Generate docker metadata for non-root image 
    id: meta-nonroot
    uses: docker/metadata-action@e5622373a38e60fb6d795a4421e56882f2d7a681 # v3.6.2
    with:
      flavor: |
        latest=auto
        prefix=
        suffix=-nonroot,onlatest=true
      images: ${{ env.shared-images }}
      tags: ${{ env.shared-tag-list }}
  
  - name: Build and push non-root docker image
    uses: docker/build-push-action@a66e35b9cbcf4ad0ea91ffcaf7bbad63ad9e0229 # v2.7.0
    with:
      push: ${{ inputs.publish }}
      tags: ${{ steps.meta-nonroot.outputs.tags }}
      labels: ${{ steps.meta-nonroot.outputs.labels }}
      file: core/chainlink.Dockerfile
      build-args: |
        CHAINLINK_USER:chainlink
        ${{ env.shared-build-args }}
