name: Create Base64 Upgrade Config
description: A composite action that creates a base64-encoded config to be used by Chainlink version upgrade tests

inputs:
  selectedNetworks:
    description: The networks to run tests against
  chainlinkImage:
    description: The chainlink image to upgrade from
    default: "public.ecr.aws/chainlink/chainlink"
  chainlinkVersion:
    description: The git commit sha to use for the image tag
  upgradeImage:
    description: The chainlink image to upgrade to
    default: "public.ecr.aws/chainlink/chainlink"
  upgradeVersion:
    description: The git commit sha to use for the image tag

runs:
  using: composite
  steps:
    - name: Prepare Base64 TOML override
      shell: bash
      id: base64-config-override
      env:
        SELECTED_NETWORKS: ${{ inputs.selectedNetworks }}
        CHAINLINK_IMAGE: ${{ inputs.chainlinkImage }}
        CHAINLINK_VERSION: ${{ inputs.chainlinkVersion }}
        UPGRADE_IMAGE: ${{ inputs.upgradeImage }}
        UPGRADE_VERSION: ${{ inputs.upgradeVersion }}
      run: |
        function convert_to_toml_array() {
          local IFS=','
          local input_array=($1)
          local toml_array_format="["

          for element in "${input_array[@]}"; do
              toml_array_format+="\"$element\","
          done

          toml_array_format="${toml_array_format%,}]"
          echo "$toml_array_format"
        }

        selected_networks=$(convert_to_toml_array "$SELECTED_NETWORKS")

        cat << EOF > config.toml
        [Network]
        selected_networks=$selected_networks

        [ChainlinkImage]
        image="$CHAINLINK_IMAGE"
        version="$CHAINLINK_VERSION"

        [ChainlinkUpgradeImage]
        image="$UPGRADE_IMAGE"
        version="$UPGRADE_VERSION"
        EOF

        BASE64_CONFIG_OVERRIDE=$(cat config.toml | base64 -w 0)
        echo ::add-mask::$BASE64_CONFIG_OVERRIDE
        echo "BASE64_CONFIG_OVERRIDE=$BASE64_CONFIG_OVERRIDE" >> $GITHUB_ENV
