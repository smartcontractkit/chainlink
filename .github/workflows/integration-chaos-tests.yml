name: Integration Chaos Test
on:
  schedule:
    - cron: "0 0 * * *"
  push:
    tags:
      - "*"

env:
  REF_NAME: ${{ github.head_ref || github.ref_name }}
  DEVELOP_REF: develop
  BUILD_SHA_REF: ci.${{ github.sha }}
  CHAINLINK_ECR_BASE: ${{ secrets.QA_AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ secrets.QA_AWS_REGION }}.amazonaws.com/chainlink
  ENV_JOB_IMAGE_BASE: ${{ secrets.QA_AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ secrets.QA_AWS_REGION }}.amazonaws.com/chainlink-tests
  TEST_SUITE: chaos
  TEST_ARGS: -test.timeout 1h
  SELECTED_NETWORKS: SIMULATED
  CHAINLINK_COMMIT_SHA: ${{ github.sha }}
  CHAINLINK_ENV_USER: ${{ github.actor }}
  TEST_LOG_LEVEL: debug

jobs:
  build-chainlink:
    environment: integration
    permissions:
      id-token: write
      contents: read
    name: Build Chainlink Image
    runs-on: ubuntu-latest
    outputs:
      push: ${{ steps.push.outputs.tag }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - name: Build Image
        if: ${{ env.REF_NAME != env.DEVELOP_REF }}
        uses: smartcontractkit/chainlink-github-actions/chainlink-testing-framework/build-image@ce87f8986ca18336cc5015df75916c2ec0a7c4b3 # v2.1.2
        with:
          cl_repo: smartcontractkit/chainlink
          cl_ref: ${{ github.sha }}
          push_tag: ${{ secrets.QA_AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ secrets.QA_AWS_REGION }}.amazonaws.com/chainlink:${{ env.BUILD_SHA_REF }}
          QA_AWS_REGION: ${{ secrets.QA_AWS_REGION }}
          QA_AWS_ROLE_TO_ASSUME: ${{ secrets.QA_AWS_ROLE_TO_ASSUME }}
      - name: Print Chainlink Image Built
        id: push
        run: |
          echo "### chainlink image tag used for this test run :link:" >>$GITHUB_STEP_SUMMARY
          if [ "${{ env.REF_NAME }}" != "${{ env.DEVELOP_REF }}" ]; then
            # use sha if not on ${{ env.DEVELOP_REF }}
            echo "tag=${{ env.BUILD_SHA_REF }}" >>$GITHUB_OUTPUT
            echo "\`${{ env.BUILD_SHA_REF }}\`" >>$GITHUB_STEP_SUMMARY
          else
            # default to ${{ env.DEVELOP_REF }}
            echo "tag=${{ env.DEVELOP_REF }}" >>$GITHUB_OUTPUT
            echo "\`${{ env.DEVELOP_REF }}\`" >>$GITHUB_STEP_SUMMARY
          fi
      - name: Collect Metrics
        if: always()
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@808c183d1f5c26a4f3fd50b75d3cf7b58d9aa293
        with:
          basic-auth: ${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: ${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Build Chainlink Image
        continue-on-error: true

  build-test-runner:
    environment: integration
    permissions:
      id-token: write
      contents: read
    name: Build Test Runner Image
    runs-on: ubuntu-latest
    outputs:
      testtag: ${{ steps.testtag.outputs.tag }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - name: build test runner
        if: ${{ env.REF_NAME != env.DEVELOP_REF }}
        uses: smartcontractkit/chainlink-github-actions/docker/build-push@ce87f8986ca18336cc5015df75916c2ec0a7c4b3 # v2.1.2
        with:
          tags: ${{ env.ENV_JOB_IMAGE_BASE }}:${{ env.BUILD_SHA_REF }}
          file: ./integration-tests/test.Dockerfile
          build-args: |
            BASE_IMAGE=${{ secrets.QA_AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ secrets.QA_AWS_REGION }}.amazonaws.com/test-base-image
            IMAGE_VERSION=v0.3.16
            SUITES="${{ env.TEST_SUITE }}"
          AWS_REGION: ${{ secrets.QA_AWS_REGION }}
          AWS_ROLE_TO_ASSUME: ${{ secrets.QA_AWS_ROLE_TO_ASSUME }}
      - id: testtag
        name: Print Chainlink Image Built
        run: |
          echo "### chainlink-tests image tag used for this test run :link:" >>$GITHUB_STEP_SUMMARY
          if [ "${{ env.REF_NAME }}" != "${{ env.DEVELOP_REF }}" ]; then
            # use sha if not on ${{ env.DEVELOP_REF }}
            echo "tag=${{ env.BUILD_SHA_REF }}" >>$GITHUB_OUTPUT
            echo "\`${{ env.BUILD_SHA_REF }}\`" >>$GITHUB_STEP_SUMMARY
          else
            # default to ${{ env.DEVELOP_REF }}
            echo "tag=${{ env.DEVELOP_REF }}" >>$GITHUB_OUTPUT
            echo "\`${{ env.DEVELOP_REF }}\`" >>$GITHUB_STEP_SUMMARY
          fi
      - name: Collect Metrics
        if: always()
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@808c183d1f5c26a4f3fd50b75d3cf7b58d9aa293
        with:
          basic-auth: ${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: ${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Build Test Runner Image
        continue-on-error: true

  chaos-tests:
    environment: integration
    permissions:
      checks: write
      pull-requests: write
      id-token: write
      contents: read
    name: EVM Pods Chaos Tests
    runs-on: ubuntu-latest
    needs: [build-test-runner, build-chainlink]
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@808c183d1f5c26a4f3fd50b75d3cf7b58d9aa293
        with:
          basic-auth: ${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: ${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: EVM Pods Chaos Tests
        continue-on-error: true
      - run: echo "${{ needs.build-test-runner.outputs.testtag }}"
      - name: Checkout the repo
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - name: Run Tests
        uses: smartcontractkit/chainlink-github-actions/chainlink-testing-framework/run-tests@ce87f8986ca18336cc5015df75916c2ec0a7c4b3 # v2.1.2
        with:
          test_command_to_run: export ENV_JOB_IMAGE=${{ env.ENV_JOB_IMAGE_BASE }}:${{ needs.build-test-runner.outputs.testtag }} && make test_need_operator_assets && cd integration-tests && go test -timeout 1h -count=1 -json -test.parallel 11 ./chaos 2>&1 | tee /tmp/gotest.log | gotestfmt
          test_download_vendor_packages_command: cd ./integration-tests && go mod download
          cl_repo: ${{ env.CHAINLINK_ECR_BASE }}
          cl_image_tag: ${{ needs.build-chainlink.outputs.push }}
          artifacts_location: ./integration-tests/chaos/logs
          publish_check_name: EVM Pods Chaos Test Results
          token: ${{ secrets.GITHUB_TOKEN }}
          go_mod_path: ./integration-tests/go.mod
          QA_AWS_REGION: ${{ secrets.QA_AWS_REGION }}
          QA_AWS_ROLE_TO_ASSUME: ${{ secrets.QA_AWS_ROLE_TO_ASSUME }}
          QA_KUBECONFIG: ${{ secrets.QA_KUBECONFIG }}
      - name: Upload test log
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        if: failure()
        with:
          name: Test Results Log
          path: /tmp/gotest.log
          retention-days: 7
