name: CI

on: [push]

env:
  CACHE_VERSION: 9c3bfa173ea0aca1f9939f8896feb4a4

jobs:
  integration:
    name: Integration tests running ./compose ${{ matrix.test }} against ${{ matrix.node }}
    runs-on: [self-hosted, sdlc-ghr-prod]
    strategy:
      matrix:
        test: ['test', 'test:ts']
        node: ['geth', 'parity']
    env:
      GETH_MODE: ${{ matrix.node == 'geth' }}
      CI: true
      CHAINLINK_DB_NAME: postgres
      EXPLORER_DOCKER_TAG: ${{ fromJSON('["latest", "develop"]')[github.ref == 'refs/heads/master'] }} # https://github.community/t/do-expressions-support-ternary-operators-to-change-their-returned-value/18114/4
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_READONLY_USERNAME }}
          password: ${{ secrets.DOCKER_READONLY_PASSWORD }}
      - name: Run tests
        run: timeout --foreground 1200s ./compose ${{ matrix.test }}
        working-directory: ./tools/docker
      - name: Cleanup
        if: always()
        run: ./compose ${{ matrix.test }}:down
        working-directory: ./tools/docker
      - name: Capture logs on failure
        if: failure()
        run: ./compose logs:test:save
        working-directory: ./tools/docker
      - name: Store logs artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v1
        with:
          name: logs
          path: ./tools/docker/logs

  solidity:
    name: Solidity
    runs-on: [self-hosted, sdlc-ghr-prod]
    container:
      image: smartcontract/builder:1.0.37
      credentials:
        username: ${{ secrets.DOCKER_READONLY_USERNAME }}
        password: ${{ secrets.DOCKER_READONLY_PASSWORD }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Yarn cache
        uses: actions/cache@v2
        env:
          cache-name: yarn-cache
        with:
          path: |
            ~/.npm
            ~/.cache
            **/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: yarn install --frozen-lockfile
      - run: ./tools/bin/restore-solc-cache
      - name: Run tests
        run: ./tools/ci/solidity_test

  operator-ui:
    name: Operator UI
    runs-on: ubuntu-latest
    container:
      image: smartcontract/builder:1.0.37
      credentials:
        username: ${{ secrets.DOCKER_READONLY_USERNAME }}
        password: ${{ secrets.DOCKER_READONLY_PASSWORD }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Yarn cache
        uses: actions/cache@v2
        env:
          cache-name: yarn-cache
        with:
          path: |
            ~/.npm
            ~/.cache
            **/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: yarn install --frozen-lockfile
      - run: ./tools/bin/restore-solc-cache
      - name: Run Operator UI tests
        run: ./tools/ci/operator_ui_test

  lint:
    name: Yarn lint
    runs-on: ubuntu-latest
    container:
      image: smartcontract/builder:1.0.37
      credentials:
        username: ${{ secrets.DOCKER_READONLY_USERNAME }}
        password: ${{ secrets.DOCKER_READONLY_PASSWORD }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Yarn cache
        uses: actions/cache@v2
        env:
          cache-name: yarn-cache
        with:
          path: |
            ~/.npm
            ~/.cache
            **/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: yarn install --frozen-lockfile
      - run: ./tools/bin/restore-solc-cache
      - name: Run Yarn lint
        run: yarn lint

  prettier:
    name: Prettier formatting check
    runs-on: ubuntu-latest
    container:
      image: smartcontract/builder:1.0.37
      credentials:
        username: ${{ secrets.DOCKER_READONLY_USERNAME }}
        password: ${{ secrets.DOCKER_READONLY_PASSWORD }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Yarn cache
        uses: actions/cache@v2
        env:
          cache-name: yarn-cache
        with:
          path: |
            ~/.npm
            ~/.cache
            **/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: yarn install --frozen-lockfile
      - run: ./tools/bin/restore-solc-cache
      - name: Run Yarn lint
        run: yarn prettier:check

  prepublish_npm:
    name: Prepublish NPM
    runs-on: [self-hosted, sdlc-ghr-prod]
    container:
      image: smartcontract/builder:1.0.37
      credentials:
        username: ${{ secrets.DOCKER_READONLY_USERNAME }}
        password: ${{ secrets.DOCKER_READONLY_PASSWORD }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Yarn cache
        uses: actions/cache@v2
        env:
          cache-name: yarn-cache
        with:
          path: |
            ~/.npm
            ~/.cache
            **/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: yarn install --frozen-lockfile
      - run: ./tools/bin/restore-solc-cache
      - name: Run prepublish NPM test
        run: ./tools/ci/prepublish_npm_test

  build-chainlink:
    name: Build chainlink image
    runs-on: [self-hosted, sdlc-ghr-prod]
    strategy:
      matrix:
        dockerfile: [core/chainlink.Dockerfile]
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: '${{ secrets.GHA_AWS_ACCESS_KEY_ID }}'
          aws-secret-access-key: '${{ secrets.GHA_AWS_SECRET_ACCESS_KEY }}'
          aws-region: '${{ secrets.AWS_DEFAULT_REGION }}'
          role-to-assume: '${{ secrets.GHA_AWS_ROLE_TO_ASSUME }}'
          role-duration-seconds: 1200
          role-session-name: 'temp-session'
          role-skip-session-tagging: true
      - name: Docker login to ECR
        uses: aws-actions/amazon-ecr-login@v1
        id: login-ecr
      # https://github.com/docker/build-push-action/issues/20
      - name: Get ecr password
        id: get-ecr-password
        run: |
          aws ecr get-login-password \
          | {
            read PASSWORD
            echo "::add-mask::$PASSWORD"
            echo "::set-output name=password::$PASSWORD"
            }
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_READONLY_USERNAME }}
          password: ${{ secrets.DOCKER_READONLY_PASSWORD }}
      - name: Build image
        uses: docker/build-push-action@v1
        with:
          registry: ${{ steps.login-ecr.outputs.registry }}
          repository: ${{ secrets.ECR_REPO }}
          username: AWS # temporary
          password: ${{ steps.get-ecr-password.outputs.password }} # temporary
          dockerfile: ${{ matrix.dockerfile }}
          build_args: COMMIT_SHA=${{ github.sha }},ENVIRONMENT=release
          tags: githubactions
          add_git_labels: true
          tag_with_ref: true
          tag_with_sha: true
          push: false
