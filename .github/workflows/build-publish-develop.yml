name: "Push develop to private ECR"

on:
  push:
    branches:
      - develop
  workflow_dispatch:
    inputs:
      git_ref:
        description: "Git ref (commit SHA, branch name, tag name, etc.) to checkout"
        required: true
env:
  GIT_REF: ${{ github.event.inputs.git_ref || github.ref }}

jobs:
  push-chainlink-develop:
    runs-on: ubuntu-20.04
    environment: build-develop
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        image:
          - name: ""
            dockerfile: core/chainlink.Dockerfile
            tag-suffix: ""
          - name: (plugins)
            dockerfile: plugins/chainlink.Dockerfile
            tag-suffix: -plugins
    name: push-chainlink-develop ${{ matrix.image.name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
        with:
          ref: ${{ env.GIT_REF }}
      # When this is ran from manual workflow_dispatch, the github.sha may be
      # different than the checked out commit sha. The core build uses this
      # commit sha as build metadata, so we need to make sure it's correct.
      - name: Get checked out git ref
        if: github.event.inputs.git_ref
        id: git-ref
        run: echo "checked-out=$(git rev-parse HEAD)" | tee -a "${GITHUB_OUTPUT}"
      - name: Build, sign and publish chainlink image
        uses: ./.github/actions/build-sign-publish-chainlink
        with:
          publish: true
          aws-role-to-assume: ${{ secrets.AWS_OIDC_IAM_ROLE_ARN }}
          aws-role-duration-seconds: ${{ secrets.AWS_ROLE_DURATION_SECONDS }}
          aws-region: ${{ secrets.AWS_REGION }}
          ecr-hostname: ${{ secrets.AWS_DEVELOP_ECR_HOSTNAME }}
          ecr-image-name: chainlink
          ecr-tag-suffix: ${{ matrix.image.tag-suffix }}
          dockerfile: ${{ matrix.image.dockerfile }}
          dockerhub_username: ${{ secrets.DOCKERHUB_READONLY_USERNAME }}
          dockerhub_password: ${{ secrets.DOCKERHUB_READONLY_PASSWORD }}
          git-commit-sha: ${{ steps.git-ref.outputs.checked-out || github.sha }}

      - name: Setup GAP
        # Don't run for plugins.
        if: matrix.image.name == ''
        uses: smartcontractkit/.github/actions/setup-gap@main
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-role-arn: ${{ secrets.AWS_OIDC_IAM_ROLE_PUBLISH_PR_ARN }}
          api-gateway-host: ${{ secrets.AWS_API_GW_HOST_ARGO_SAND }}
          use-argocd: "true"
          argocd-user: ${{ secrets.ARGOCD_USER_SAND }}
          argocd-pass: ${{ secrets.ARGOCD_PASS_SAND }}

      # Run an Argo CD sync after the image is built.
      - name: Argo CD App Sync
        # Don't run for plugins.
        if: matrix.image.name == ''
        shell: bash
        env:
          AWS_SDLC_ECR_HOSTNAME: ${{ secrets.AWS_SDLC_ECR_HOSTNAME }}
        run: |
          argocd app sync "crib-chainlink-develop" \
            --plaintext \
            --grpc-web \
            --async \
            --helm-set="chainlink.nodes[0].name=node1" \
            --helm-set="chainlink.nodes[0].image=${AWS_SDLC_ECR_HOSTNAME}/chainlink:develop" \
            --helm-set="chainlink.nodes[1].name=node2" \
            --helm-set="chainlink.nodes[1].image=${AWS_SDLC_ECR_HOSTNAME}/chainlink:develop" \
            --helm-set="chainlink.nodes[2].name=node3" \
            --helm-set="chainlink.nodes[2].image=${AWS_SDLC_ECR_HOSTNAME}/chainlink:develop" \
            --helm-set="chainlink.nodes[3].name=node4" \
            --helm-set="chainlink.nodes[3].image=${AWS_SDLC_ECR_HOSTNAME}/chainlink:develop" \
            --helm-set="chainlink.nodes[4].name=node5" \
            --helm-set="chainlink.nodes[4].image=${AWS_SDLC_ECR_HOSTNAME}/chainlink:develop" \
            --helm-set="chainlink.nodes[5].name=node6" \
            --helm-set="chainlink.nodes[5].image=${AWS_SDLC_ECR_HOSTNAME}/chainlink:develop"

      - name: Collect Metrics
        if: always()
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@0281b09807758be1dcc41651e44e62b353808c47 # v2.1.0
        with:
          org-id: ${{ secrets.GRAFANA_INTERNAL_TENANT_ID }}
          basic-auth: ${{ secrets.GRAFANA_INTERNAL_BASIC_AUTH }}
          hostname: ${{ secrets.GRAFANA_INTERNAL_HOST }}
          this-job-name: push-chainlink-develop ${{ matrix.image.name }}
        continue-on-error: true
