name: Performance Tests
on:
  workflow_dispatch:
    inputs:
      focus:
        description: cron|directrequest|flux|keeper|ocr|vrf|suite
        required: true
        default: suite
        type: string
jobs:
  build-chainlink:
    environment: integration
    permissions:
      id-token: write
      contents: read
    name: Build Chainlink Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.QA_AWS_REGION }}
          role-to-assume: ${{ secrets.QA_AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 3600
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: core/chainlink.Dockerfile
          # comma separated like: KEY1=VAL1,KEY2=VAL2,...
          build-args: COMMIT_SHA=${{ github.sha }}
          tags: ${{ secrets.QA_AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/chainlink:latest.${{ github.sha }}
          push: true
  run_tests:
    environment: integration
    name: run core evm ${{ github.event.inputs.focus }} performance tests
    runs-on: ubuntu-latest
    needs: build-chainlink
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Run Tests
        uses: smartcontractkit/ctf-ci-e2e-action@41848377703354a32d355d3f2f7cb3b9e3049b8c
        with:
          test_command_to_run: make test_perf args="--procs=10 --focus=${{ github.event.inputs.focus }}"
          test_download_vendor_packages_command: make gomod
          test_download_ginkgo_command: make test_install_ginkgo
          cl_repo: ${{ secrets.QA_AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/chainlink
          cl_image_tag: latest.${{ github.sha }}
          artifacts_location: ./integration-tests/performance/logs
          publish_report_paths: ./tests-perf-report.xml
          QA_AWS_REGION: ${{ secrets.QA_AWS_REGION }}
          QA_AWS_ROLE_TO_ASSUME: ${{ secrets.QA_AWS_ROLE_TO_ASSUME }}
          QA_KUBECONFIG: ${{ secrets.QA_KUBECONFIG }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish pprof artifacts
        if: ${{ success() }}
        uses: actions/upload-artifact@v3
        with:
          name: pprof_results
          path: ./integration-tests/performance/logs
