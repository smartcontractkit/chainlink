name: On Demand OCR Soak Test
on:
  workflow_dispatch:
    inputs:
      testToRun:
        description: Select a test to run from .github/e2e-tests.yml
        required: true
        default: TestOCRSoak
        type: choice
        options:
          - soak/ocr_test.go:TestOCRv1Soak
          - soak/ocr_test.go:TestOCRv2Soak
          - soak/ocr_test.go:TestForwarderOCRv1Soak
          - soak/ocr_test.go:TestForwarderOCRv2Soak
          - soak/ocr_test.go:TestOCRSoak_GethReorgBelowFinality_FinalityTagDisabled
          - soak/ocr_test.go:TestOCRSoak_GethReorgBelowFinality_FinalityTagEnabled
          - soak/ocr_test.go:TestOCRSoak_GasSpike
          - soak/ocr_test.go:TestOCRSoak_ChangeBlockGasLimit
          - soak/ocr_test.go:TestOCRSoak_RPCDownForAllCLNodes
          - soak/ocr_test.go:TestOCRSoak_RPCDownForHalfCLNodes
      test_config_override_path:
        description: Path to a test config file used to override the default test config
        required: false
        type: string
      test_secrets_override_key:
        description: 'Key to run tests with custom test secrets'
        required: false
        type: string
      chainlink_version:
        description: Chainlink image version to use
        default: develop
        required: true
        type: string
      slackMemberID:
        description: Slack Member ID (Not your @)
        required: true
        default: U01A2B2C3D4        
        
jobs:
  run-e2e-tests-workflow:
    name: Run E2E Tests
    uses: smartcontractkit/.github/.github/workflows/run-e2e-tests.yml@65e5ec4c28006e0a9b6a18529f4751748d9e2ca5
    with:
      test_path: .github/e2e-tests.yml
      test_ids: ${{ inputs.testToRun}}
      test_config_override_path: ${{ inputs.test_config_override_path }}
      chainlink_version: ${{ inputs.chainlink_version }}
      SLACK_USER: ${{ inputs.slackMemberID }}
    secrets:
      QA_AWS_REGION: ${{ secrets.QA_AWS_REGION }}
      QA_AWS_ROLE_TO_ASSUME: ${{ secrets.QA_AWS_ROLE_TO_ASSUME }}
      QA_AWS_ACCOUNT_NUMBER: ${{ secrets.QA_AWS_ACCOUNT_NUMBER }}
      PROD_AWS_ACCOUNT_NUMBER: ${{ secrets.AWS_ACCOUNT_ID_PROD }}
      QA_PYROSCOPE_INSTANCE: ${{ secrets.QA_PYROSCOPE_INSTANCE }}
      QA_PYROSCOPE_KEY: ${{ secrets.QA_PYROSCOPE_KEY }}
      QA_KUBECONFIG: ${{ secrets.QA_KUBECONFIG }}
      GRAFANA_INTERNAL_TENANT_ID: ${{ secrets.GRAFANA_INTERNAL_TENANT_ID }}
      GRAFANA_INTERNAL_BASIC_AUTH: ${{ secrets.GRAFANA_INTERNAL_BASIC_AUTH }}
      GRAFANA_INTERNAL_HOST: ${{ secrets.GRAFANA_INTERNAL_HOST }}
      GRAFANA_INTERNAL_URL_SHORTENER_TOKEN: ${{ secrets.GRAFANA_INTERNAL_URL_SHORTENER_TOKEN }}
      LOKI_TENANT_ID: ${{ secrets.LOKI_TENANT_ID }}
      LOKI_URL: ${{ secrets.LOKI_URL }}
      LOKI_BASIC_AUTH: ${{ secrets.LOKI_BASIC_AUTH }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
      AWS_REGION: ${{ secrets.QA_AWS_REGION }}
      AWS_OIDC_IAM_ROLE_VALIDATION_PROD_ARN: ${{ secrets.AWS_OIDC_IAM_ROLE_VALIDATION_PROD_ARN }}
      AWS_API_GW_HOST_GRAFANA: ${{ secrets.AWS_API_GW_HOST_GRAFANA }}        
      TEST_SECRETS_OVERRIDE_BASE64: ${{ secrets[inputs.test_secrets_override_key] }}
      SLACK_API_KEY: ${{ secrets.QA_SLACK_API_KEY }}
      SLACK_CHANNEL: ${{ secrets.QA_SLACK_CHANNEL }}
