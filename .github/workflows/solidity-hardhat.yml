name: Solidity-Hardhat
on:
  push:
  workflow_dispatch:
    inputs:
      product:
        type: choice
        description: 'product for which to generate artifacts; should be the same as foundry profile'
        required: true
        options:
          - "automation"
          - "ccip"
          - "functions"
          - "keystone"
          - "l2ep"
          - "llo-feeds"
          - "operatorforwarder"
          - "transmission"
          - "vrf"
      base_ref:
        description: 'commit or tag to be used as base reference, when looking for modified Solidity files'
        required: true

env:
  FOUNDRY_PROFILE: ci
  # Has to match the `make foundry` version.
  FOUNDRY_VERSION: nightly-de33b6af53005037b463318d2628b5cfcaf39916
  PRODUCT: "automation"
  BASE_REF: "v2.13.0"

jobs:
  changes:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      changes: ${{ steps.changes.outputs.sol }}
      product_changes: ${{ steps.changes.outputs.product }}
      shared_changes: ${{ steps.changes.outputs.shared }}
      files: ${{ steps.changes.outputs.included_files }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      - name: Find modified contracts
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: changes
        with:
          list-files: 'csv'
          base: ${{ env.BASE_REF }} #TODO change to inputs.base_ref after testing
          filters: |
            shared: &shared
              - modified|added: 'contracts/src/!(v0.8/**/test/**|v0.8/**/tests/**|v0.8/**/*.t.sol|v0.8/*.t.sol|v0.8/**/testhelpers/**|v0.8/testhelpers/**|v0.8/vendor/**)/(shared/**/*.sol|interfaces/**/*.sol|*.sol)'
            all_sol:
              - modified|added: 'contracts/src/v0.8/**/*.sol'
            sol:
              - modified|added: 'contracts/src/v0.8/!(test|tests|testhelpers|vendor)/**/!(test|tests|testhelpers|vendor)/!(test|tests|testhelpers|vendor|*.t.sol|vendor)/**/*.sol'
            product: &product
              - modified|added: 'contracts/src/!(v0.8/**/test/**|v0.8/**/tests/**|v0.8/**/*.t.sol|v0.8/*.t.sol|v0.8/**/testhelpers/**|v0.8/testhelpers/**|v0.8/vendor/**)/${{ env.PRODUCT }}/**/*.sol'
            included:
              - *product
              - *shared

      - name: Check for changes outside of artifact scope
        if: ${{ steps.changes.outputs.sol == 'true' }}
        shell: bash
        run: |
          echo "::debug::All modified contracts:"
          echo ${{ steps.changes.outputs.all_sol_files }} | tr ',' '\n'          
          echo "::debug::Filtered modified contracts:"
          echo ${{ steps.changes.outputs.sol_files }} | tr ',' '\n'
          excluded_paths_pattern="!/^contracts\/src\/v0\.8\/shared/ && !/^contracts\/src\/v0\.8\/${{ env.PRODUCT}}/ && !/^contracts\/src\/v0\.8\/[^\/]+\.sol$/"
          echo "::debug::Excluded paths: $excluded_paths_pattern"
          unexpected_files=$(echo ${{ steps.changes.outputs.sol_files }} | tr ',' '\n' | awk "$excluded_paths_pattern")
          if [[ -n "$unexpected_files" ]]; then
            echo "Error: Found modified contracts outside of the expected scope: ${{ env.PRODUCT }}, shared"
            echo "Files:"
            echo "$unexpected_files"
            echo "Please run this workflow separately for other products, if you want to generate the artifacts"
          
            echo "# Warning!" >> $GITHUB_STEP_SUMMARY
            echo "## Reason: Found modified contracts outside of the expected scope: ${{ env.PRODUCT }}, shared" >> $GITHUB_STEP_SUMMARY
            echo "### Files:" >> $GITHUB_STEP_SUMMARY
            echo "$unexpected_files" >> $GITHUB_STEP_SUMMARY
            echo "## Action required: Please run this workflow separately for other products, if you want to generate the artifacts" >> $GITHUB_STEP_SUMMARY            
          else
            echo "No unexpected files found."
          fi
          
          exit 1

      - name: Check for changes only in shared
        if: ${{ steps.changes.outputs.product == 'false' && steps.changes.outputs.shared == 'true' }}
        shell: bash
        run: |
          echo "# Warning!" >> $GITHUB_STEP_SUMMARY
          echo "## Reason: Found No modified contracts for product ${{ env.PRODUCT }}" >> $GITHUB_STEP_SUMMARY
          echo "## Action required: Please check if you chose correct product and base reference" >> $GITHUB_STEP_SUMMARY
          echo "## Product: ${{ env.PRODUCT }}" >> $GITHUB_STEP_SUMMARY
          #TODO change to inputs.base_ref after testing
          echo "## Base Ref: ${{ env.BASE_REF }}" >> $GITHUB_STEP_SUMMARY

  # some of the artifacts can only be generated on product level, and we cannot scope them to single contracts
  # some product-level modifications might also require shared contracts changes, so if these happened we need to generate artifacts for shared contracts as well
  coverage-and-book:
    if: ${{ needs.changes.outputs.product_changes == 'true' || needs.changes.outputs.shared_changes == 'true' }}
    name: Generate Docs and Code Coverage reports
    runs-on: ubuntu-22.04
    needs: [changes]
    steps:
      - name: Checkout the repo
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
        with:
          submodules: recursive

      - name: Setup NodeJS
        uses: ./.github/actions/setup-nodejs

      - name: Create directories
        shell: bash
        run: |
          mkdir -p contracts/code-coverage  

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@8f1998e9878d786675189ef566a2e4bf24869773 # v1.2.0
        with:
          version: ${{ env.FOUNDRY_VERSION }}

      # required for code coverage report generation
      - name: Setup LCOV
        uses: hrishikesh-kadam/setup-lcov@f5da1b26b0dcf5d893077a3c4f29cf78079c841d # v1.0.0

      - name: Run Forge build for product contracts
        if: ${{ needs.changes.outputs.product_changes == 'true' }}
        run: |
          forge --version
          forge build
        working-directory: contracts
        env:
          FOUNDRY_PROFILE: ${{ env.PRODUCT }}

      - name: Run Forge build for shared contracts
        if: ${{ needs.changes.outputs.shared_changes == 'true' }}
        run: |
          forge --version
          forge build
        working-directory: contracts
        env:
          FOUNDRY_PROFILE: "shared"

      - name: Run coverage for product contracts
        if: ${{ !contains(fromJson('["vrf"]'), env.PRODUCT) && !contains(fromJson('["automation"]'), env.PRODUCT) && !contains(fromJson('["functions"]'), env.PRODUCT) && needs.changes.outputs.product_changes == 'true' }}
        working-directory: contracts
        run: forge coverage --report lcov --report-file code-coverage/lcov-${{ env.PRODUCT }}.info
        env:
          FOUNDRY_PROFILE: ${{ env.PRODUCT }}

      - name: Run coverage for shared contracts
        if: ${{ needs.changes.outputs.shared_changes == 'true' }}
        working-directory: contracts
        run: forge coverage --report lcov --report-file code-coverage/lcov-shared.info
        env:
          FOUNDRY_PROFILE: "shared"

      - name: Generate Code Coverage HTML report for product contracts
        if: ${{ !contains(fromJson('["vrf"]'), env.PRODUCT) && !contains(fromJson('["automation"]'), env.PRODUCT) && !contains(fromJson('["functions"]'), env.PRODUCT) && needs.changes.outputs.product_changes == 'true' }}
        shell: bash
        run: cd contracts && genhtml code-coverage/lcov-${{ env.PRODUCT }}.info --branch-coverage --output-directory code-coverage/${{ env.PRODUCT }}

      - name: Generate Code Coverage HTML report for shared contracts
        if: ${{ needs.changes.outputs.shared_changes == 'true' }}
        shell: bash
        run: cd contracts && genhtml code-coverage/lcov-shared.info --branch-coverage --output-directory code-coverage/shared

      - name: Run Forge doc for product contracts
        if: ${{ needs.changes.outputs.product_changes == 'true' }}
        run: forge doc --build -o docs/${{ env.PRODUCT }}
        working-directory: contracts
        env:
          FOUNDRY_PROFILE: ${{ env.PRODUCT }}

      - name: Run Forge doc for shared contracts
        if: ${{ needs.changes.outputs.shared_changes == 'true' }}
        run: forge doc --build -o docs/shared
        working-directory: contracts
        env:
          FOUNDRY_PROFILE: "shared"

      - name: Upload Artifacts for product contracts
        if: ${{ needs.changes.outputs.product_changes == 'true' }}
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        timeout-minutes: 2
        continue-on-error: true
        with:
          name: tmp-${{ env.PRODUCT }}-artifacts
          path: |
            contracts/docs/${{ env.PRODUCT }}
            contracts/code-coverage/lcov-${{ env.PRODUCT }}.info
            contracts/code-coverage/${{ env.PRODUCT }}
          retention-days: 7

      - name: Upload Artifacts for shared contracts
        if: ${{ needs.changes.outputs.shared_changes == 'true' }}
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        timeout-minutes: 2
        continue-on-error: true
        with:
          name: tmp-shared-artifacts
          path: |
            contracts/docs/shared
            contracts/code-coverage/lcov-shared.info
            contracts/code-coverage/shared
          retention-days: 7

  # Generates UML diagrams and Slither reports for modified contracts
  uml-static-analysis:
    if: ${{ needs.changes.outputs.product_changes == 'true' || needs.changes.outputs.shared_changes == 'true' }}
    name: Generate UML and Slither reports for modified contracts
    runs-on: ubuntu-22.04
    needs: [changes]
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup NodeJS
        uses: ./.github/actions/setup-nodejs

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@8f1998e9878d786675189ef566a2e4bf24869773 # v1.2.0
        with:
          version: ${{ env.FOUNDRY_VERSION }}

      - name: Install Sol2uml
        run: |
          npm link sol2uml --only=production

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Install solc-select and solc
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install solc-select
          sudo ln -s /usr/local/bin/solc-select /usr/bin/solc-select
          solc-select install 0.8.19
          solc-select use 0.8.19

      - name: Install Slither
        run: |
          python -m pip install --upgrade pip
          pip install slither-analyzer

      - name: Save basic info
        shell: bash
        run: |
          cd contracts
          
          echo "Commit SHA used to generate artifacts: ${{ github.sha }}" > commit_sha_base_ref.txt
          #TODO change to inputs.base_ref after testing
          echo "Base reference SHA used to find modified contracts: ${{ env.BASE_REF }}" >> commit_sha_base_ref.txt 
          contract_list="${{ needs.changes.outputs.files }}"
          new_line_list=$(echo "$contract_list" | tr ',' '\n' | sed 's/,$//')
          printf "%s\n" "$new_line_list" > modified_contracts.txt
          
          cat modified_contracts.txt

      - name: Generate UML
        shell: bash
        run: |          
          contract_list="${{ needs.changes.outputs.files }}"
          
          # modify remappings so that sol2uml can find dependencies
          ./contracts/scripts/ci/modify_remappings.sh contracts contracts/remappings.txt
          mv remappings_modified.txt remappings.txt
                    
          ./contracts/scripts/ci/generate_uml.sh "./" "contracts/uml-diagrams" "$contract_list"
          
          if [ -f  "contracts/uml-diagrams/uml_generation_failures.txt" ]; then
            echo "# Warning!" >> $GITHUB_STEP_SUMMARY
            echo "## Reason: Failed to generate UML diagrams for some contracts" >> $GITHUB_STEP_SUMMARY
            echo "### Files:" >> $GITHUB_STEP_SUMMARY
            cat contracts/uml-diagrams/uml_generation_failures.txt >> $GITHUB_STEP_SUMMARY
            echo "## Action required: Please try generate artifacts for them locally or using a different tool" >> $GITHUB_STEP_SUMMARY  
          fi

      - name: Generate Slither Markdown reports
        run: |
          contract_list="${{ needs.changes.outputs.files }}"
        
          echo "::debug::Processing contracts: $contract_list"
          ./contracts/scripts/ci/generate_slither_report.sh "${{ github.server_url }}/${{ github.repository }}/blob/${{ github.sha }}/" contracts/.slither.config-artifacts.json "." "$contract_list" "contracts/slither-reports" "--solc-remaps @=contracts/node_modules/@"

      - name: Upload UMLs and Slither reports
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        timeout-minutes: 10
        continue-on-error: true
        with:
          name: tmp-contracts-artifacts
          path: |
            contracts/uml-diagrams
            contracts/slither-reports
            contracts/modified_contracts.txt
            contracts/commit_sha_base_ref.txt
          retention-days: 7

  gather-all-artifacts:
    name: Gather all artifacts
    if: ${{ needs.changes.outputs.product_changes == 'true' || needs.changes.outputs.shared_changes == 'true' }}
    runs-on: ubuntu-latest
    needs: [coverage-and-book, uml-static-analysis, changes]
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
        with:
          path: review_artifacts-${{ env.PRODUCT }}-${{ github.sha }}
          merge-multiple: true

      - name: Upload all artifacts as single package
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        with:
          name: review-artifacts-${{ env.PRODUCT }}-${{ github.sha }}
          path: review_artifacts-${{ env.PRODUCT }}-${{ github.sha }}

      - name: Remove temporary artifacts
        uses: geekyeggo/delete-artifact@24928e75e6e6590170563b8ddae9fac674508aa1 # v5.0
        with:
          name: tmp-*

      - name: Print Artifact URL in job summary
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          ARTIFACTS=$(gh api -X GET repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts)
          ARTIFACT_ID=$(echo "$ARTIFACTS" | jq '.artifacts[] | select(.name=="review-artifacts-${{ env.PRODUCT }}-${{ github.sha }}") | .id')
          echo "Artifact ID: $ARTIFACT_ID"
          
          echo "# Solidity Review Artifact Generated" >> $GITHUB_STEP_SUMMARY
          # TODO change to inputs.base_ref after testing
          echo "Base Ref used: **${{ env.BASE_REF }}**" >> $GITHUB_STEP_SUMMARY
          echo "Commit SHA used: **${{ github.sha }}**" >> $GITHUB_STEP_SUMMARY
          echo "[Artifact URL](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/$ARTIFACT_ID)" >> $GITHUB_STEP_SUMMARY        

  notify-no-changes:
    if: ${{ needs.changes.outputs.product_changes == 'false' && needs.changes.outputs.shared_changes == 'false' }}
    needs: [changes]
    runs-on: ubuntu-latest
    steps:
      - name: Print warning in job summary
        shell: bash
        run: |
          echo "# Solidity Review Artifact NOT Generated" >> $GITHUB_STEP_SUMMARY
          #TODO change to inputs.base_ref after testing
          echo "Base Ref used: **${{ env.BASE_REF }}**" >> $GITHUB_STEP_SUMMARY
          echo "Commit SHA used: **${{ github.sha }}**" >> $GITHUB_STEP_SUMMARY
          echo "## Reason: No modified Solidity files found." >> $GITHUB_STEP_SUMMARY
          #TODO change to inputs.base_ref after testing
          echo "No modified Solidity files found between ${{ env.BASE_REF }} and ${{ github.sha }} commits or they are located outside of ./contracts/src/v0.8 folder" >> $GITHUB_STEP_SUMMARY
          exit 1

#on:
#  merge_group:
#  push:
#
#env:
#  NODE_OPTIONS: --max_old_space_size=8192
#
#defaults:
#  run:
#    shell: bash
#
#jobs:
#  changes:
#    name: Detect changes
#    runs-on: ubuntu-latest
#    outputs:
#      changes: ${{ steps.changes.outputs.src }}
#    steps:
#      - name: Checkout the repo
#        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
#      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
#        id: changes
#        with:
#          filters: |
#            src:
#              - 'contracts/src/!(v0.8/(ccip|functions|keystone|l2ep|llo-feeds|transmission|vrf)/**)/**/*'
#              - 'contracts/test/**/*'
#              - 'contracts/package.json'
#              - 'contracts/pnpm-lock.yaml'
#              - 'contracts/hardhat.config.ts'
#              - '.github/workflows/solidity-hardhat.yml'
#
#  hardhat-test:
#    needs: [changes]
#    if: needs.changes.outputs.changes == 'true'
#    name: Solidity ${{ fromJSON('["(skipped)", ""]')[needs.changes.outputs.changes == 'true'] }}
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout the repo
#        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
#      - name: Setup NodeJS
#        uses: ./.github/actions/setup-nodejs
#      - name: Setup Hardhat
#        uses: ./.github/actions/setup-hardhat
#        with:
#          namespace: coverage
#      - name: Run tests
#        working-directory: contracts
#        run: pnpm test
#      - name: Collect Metrics
#        id: collect-gha-metrics
#        uses: smartcontractkit/push-gha-metrics-action@d9da21a2747016b3e13de58c7d4115a3d5c97935 # v3.0.1
#        with:
#          id: hardhat-test
#          org-id: ${{ secrets.GRAFANA_INTERNAL_TENANT_ID }}
#          basic-auth: ${{ secrets.GRAFANA_INTERNAL_BASIC_AUTH }}
#          hostname: ${{ secrets.GRAFANA_INTERNAL_HOST }}
#        continue-on-error: true
#
#  solidity:
#    needs: [changes, hardhat-test]
#    name: Solidity
#    runs-on: ubuntu-latest
#    if: always()
#    steps:
#      - run: echo 'Solidity tests finished!'
#      - name: Check test results
#        run: |
#          if [[ "${{ needs.changes.result }}" = "failure" || "${{ needs.solidity-splits.result }}" = "failure" ]]; then
#            echo "One or more changes / solidity-splits jobs failed"
#            exit 1
#          else
#            echo "All test jobs passed successfully"
#          fi
#      - name: Collect Metrics
#        if: always()
#        id: collect-gha-metrics
#        uses: smartcontractkit/push-gha-metrics-action@d9da21a2747016b3e13de58c7d4115a3d5c97935 # v3.0.1
#        with:
#          id: solidity-tests
#          org-id: ${{ secrets.GRAFANA_INTERNAL_TENANT_ID }}
#          basic-auth: ${{ secrets.GRAFANA_INTERNAL_BASIC_AUTH }}
#          hostname: ${{ secrets.GRAFANA_INTERNAL_HOST }}
#          this-job-name: Solidity
#        continue-on-error: true
