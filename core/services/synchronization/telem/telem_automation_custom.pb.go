// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: telem_automation_custom.proto

package telem

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BlockNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId      string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Timetsamp   uint64 `protobuf:"varint,2,opt,name=timetsamp,proto3" json:"timetsamp,omitempty"`
	BlockNumber uint64 `protobuf:"varint,3,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	BlockHash   string `protobuf:"bytes,4,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
}

func (x *BlockNumber) Reset() {
	*x = BlockNumber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telem_automation_custom_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockNumber) ProtoMessage() {}

func (x *BlockNumber) ProtoReflect() protoreflect.Message {
	mi := &file_telem_automation_custom_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockNumber.ProtoReflect.Descriptor instead.
func (*BlockNumber) Descriptor() ([]byte, []int) {
	return file_telem_automation_custom_proto_rawDescGZIP(), []int{0}
}

func (x *BlockNumber) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *BlockNumber) GetTimetsamp() uint64 {
	if x != nil {
		return x.Timetsamp
	}
	return 0
}

func (x *BlockNumber) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *BlockNumber) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

type NodeVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId      string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Timetsamp   uint64 `protobuf:"varint,2,opt,name=timetsamp,proto3" json:"timetsamp,omitempty"`
	NodeVersion uint32 `protobuf:"varint,3,opt,name=node_version,json=nodeVersion,proto3" json:"node_version,omitempty"`
}

func (x *NodeVersion) Reset() {
	*x = NodeVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telem_automation_custom_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeVersion) ProtoMessage() {}

func (x *NodeVersion) ProtoReflect() protoreflect.Message {
	mi := &file_telem_automation_custom_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeVersion.ProtoReflect.Descriptor instead.
func (*NodeVersion) Descriptor() ([]byte, []int) {
	return file_telem_automation_custom_proto_rawDescGZIP(), []int{1}
}

func (x *NodeVersion) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *NodeVersion) GetTimetsamp() uint64 {
	if x != nil {
		return x.Timetsamp
	}
	return 0
}

func (x *NodeVersion) GetNodeVersion() uint32 {
	if x != nil {
		return x.NodeVersion
	}
	return 0
}

// StreamsLookup contains the metadata about a mercury request
type StreamsLookup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpkeepId    string   `protobuf:"bytes,1,opt,name=upkeep_id,json=upkeepId,proto3" json:"upkeep_id,omitempty"`
	BlockNumber uint64   `protobuf:"varint,2,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"` // block number provided by ocr2keepers plugin
	Timestamp   uint64   `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                        // current timestamp
	TimeParam   uint64   `protobuf:"varint,4,opt,name=time_param,json=timeParam,proto3" json:"time_param,omitempty"`       // time param key is block number for v0.2 and timestamp for v0.3, time param is the corresponding value
	Feeds       []string `protobuf:"bytes,5,rep,name=feeds,proto3" json:"feeds,omitempty"`                                 // array of feed names
}

func (x *StreamsLookup) Reset() {
	*x = StreamsLookup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telem_automation_custom_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamsLookup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamsLookup) ProtoMessage() {}

func (x *StreamsLookup) ProtoReflect() protoreflect.Message {
	mi := &file_telem_automation_custom_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamsLookup.ProtoReflect.Descriptor instead.
func (*StreamsLookup) Descriptor() ([]byte, []int) {
	return file_telem_automation_custom_proto_rawDescGZIP(), []int{2}
}

func (x *StreamsLookup) GetUpkeepId() string {
	if x != nil {
		return x.UpkeepId
	}
	return ""
}

func (x *StreamsLookup) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *StreamsLookup) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *StreamsLookup) GetTimeParam() uint64 {
	if x != nil {
		return x.TimeParam
	}
	return 0
}

func (x *StreamsLookup) GetFeeds() []string {
	if x != nil {
		return x.Feeds
	}
	return nil
}

// StreamsResponse contains the metadata about mercury response
type StreamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpkeepId        string   `protobuf:"bytes,1,opt,name=upkeep_id,json=upkeepId,proto3" json:"upkeep_id,omitempty"`
	BlockNumber     uint64   `protobuf:"varint,2,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`                      // block number provided by ocr2keepers plugin
	Timestamp       uint64   `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                             // current timestamp
	Feeds           []string `protobuf:"bytes,4,rep,name=feeds,proto3" json:"feeds,omitempty"`                                                      // array of feed names
	HttpStatusCodes []uint32 `protobuf:"varint,5,rep,packed,name=http_status_codes,json=httpStatusCodes,proto3" json:"http_status_codes,omitempty"` // Mercury server response code
	Success         bool     `protobuf:"varint,6,opt,name=success,proto3" json:"success,omitempty"`                                                 // True if all feeds gave successful response
	Retryable       bool     `protobuf:"varint,7,opt,name=retryable,proto3" json:"retryable,omitempty"`                                             // whether feedLookup should be retried if request fails
	FailureReason   uint32   `protobuf:"varint,8,opt,name=failure_reason,json=failureReason,proto3" json:"failure_reason,omitempty"`                // failure enum defined in abi.go (UPKEEP_FAILURE_REASON_MERCURY_ACCESS_NOT_ALLOWED or some on chain reasons)
}

func (x *StreamsResponse) Reset() {
	*x = StreamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telem_automation_custom_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamsResponse) ProtoMessage() {}

func (x *StreamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_telem_automation_custom_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamsResponse.ProtoReflect.Descriptor instead.
func (*StreamsResponse) Descriptor() ([]byte, []int) {
	return file_telem_automation_custom_proto_rawDescGZIP(), []int{3}
}

func (x *StreamsResponse) GetUpkeepId() string {
	if x != nil {
		return x.UpkeepId
	}
	return ""
}

func (x *StreamsResponse) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *StreamsResponse) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *StreamsResponse) GetFeeds() []string {
	if x != nil {
		return x.Feeds
	}
	return nil
}

func (x *StreamsResponse) GetHttpStatusCodes() []uint32 {
	if x != nil {
		return x.HttpStatusCodes
	}
	return nil
}

func (x *StreamsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StreamsResponse) GetRetryable() bool {
	if x != nil {
		return x.Retryable
	}
	return false
}

func (x *StreamsResponse) GetFailureReason() uint32 {
	if x != nil {
		return x.FailureReason
	}
	return 0
}

// StreamsCheckCallback contains whether customer's checkCallBack returns true with mercury data as input
type StreamsCheckCallback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpkeepId      string `protobuf:"bytes,1,opt,name=upkeep_id,json=upkeepId,proto3" json:"upkeep_id,omitempty"`
	BlockNumber   uint64 `protobuf:"varint,2,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`       // block number provided by ocr2keepers plugin
	Timestamp     uint64 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                              // current timestamp
	FailureReason uint32 `protobuf:"varint,4,opt,name=failure_reason,json=failureReason,proto3" json:"failure_reason,omitempty"` // failure enum defined in abi.go (on chain reason)
	UpkeepNeeded  bool   `protobuf:"varint,5,opt,name=upkeep_needed,json=upkeepNeeded,proto3" json:"upkeep_needed,omitempty"`    // result of checkCallBack eth call, whether upkeep needs to be performed
}

func (x *StreamsCheckCallback) Reset() {
	*x = StreamsCheckCallback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telem_automation_custom_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamsCheckCallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamsCheckCallback) ProtoMessage() {}

func (x *StreamsCheckCallback) ProtoReflect() protoreflect.Message {
	mi := &file_telem_automation_custom_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamsCheckCallback.ProtoReflect.Descriptor instead.
func (*StreamsCheckCallback) Descriptor() ([]byte, []int) {
	return file_telem_automation_custom_proto_rawDescGZIP(), []int{4}
}

func (x *StreamsCheckCallback) GetUpkeepId() string {
	if x != nil {
		return x.UpkeepId
	}
	return ""
}

func (x *StreamsCheckCallback) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *StreamsCheckCallback) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *StreamsCheckCallback) GetFailureReason() uint32 {
	if x != nil {
		return x.FailureReason
	}
	return 0
}

func (x *StreamsCheckCallback) GetUpkeepNeeded() bool {
	if x != nil {
		return x.UpkeepNeeded
	}
	return false
}

// LogTrigger contains log trigger upkeep's information
type LogTrigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpkeepId       string `protobuf:"bytes,1,opt,name=upkeep_id,json=upkeepId,proto3" json:"upkeep_id,omitempty"`
	BlockNumber    uint64 `protobuf:"varint,2,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`            // block number provided by ocr2keepers plugin
	Timestamp      uint64 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                   // current timestamp
	LogBlockNumber uint64 `protobuf:"varint,4,opt,name=log_block_number,json=logBlockNumber,proto3" json:"log_block_number,omitempty"` // block number of log we are checking in pipeline
	LogBlockHash   string `protobuf:"bytes,5,opt,name=log_block_hash,json=logBlockHash,proto3" json:"log_block_hash,omitempty"`        // block has of log we are checking in pipeline
}

func (x *LogTrigger) Reset() {
	*x = LogTrigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telem_automation_custom_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogTrigger) ProtoMessage() {}

func (x *LogTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_telem_automation_custom_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogTrigger.ProtoReflect.Descriptor instead.
func (*LogTrigger) Descriptor() ([]byte, []int) {
	return file_telem_automation_custom_proto_rawDescGZIP(), []int{5}
}

func (x *LogTrigger) GetUpkeepId() string {
	if x != nil {
		return x.UpkeepId
	}
	return ""
}

func (x *LogTrigger) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *LogTrigger) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *LogTrigger) GetLogBlockNumber() uint64 {
	if x != nil {
		return x.LogBlockNumber
	}
	return 0
}

func (x *LogTrigger) GetLogBlockHash() string {
	if x != nil {
		return x.LogBlockHash
	}
	return ""
}

// LogTriggerSuccess contains whether checkLog/checkUpkeep eth call returns true for a LogTriggered Upkeep
type LogTriggerSimulateResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpkeepId    string `protobuf:"bytes,1,opt,name=upkeep_id,json=upkeepId,proto3" json:"upkeep_id,omitempty"`
	BlockNumber uint64 `protobuf:"varint,2,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"` // block number provided by ocr2keepers plugin
	Timestamp   uint64 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                        // current timestamp
	Success     bool   `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`                            // result of checkLog/checkUpkeep eth call, whether upkeep needs to be performed
}

func (x *LogTriggerSimulateResult) Reset() {
	*x = LogTriggerSimulateResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telem_automation_custom_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogTriggerSimulateResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogTriggerSimulateResult) ProtoMessage() {}

func (x *LogTriggerSimulateResult) ProtoReflect() protoreflect.Message {
	mi := &file_telem_automation_custom_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogTriggerSimulateResult.ProtoReflect.Descriptor instead.
func (*LogTriggerSimulateResult) Descriptor() ([]byte, []int) {
	return file_telem_automation_custom_proto_rawDescGZIP(), []int{6}
}

func (x *LogTriggerSimulateResult) GetUpkeepId() string {
	if x != nil {
		return x.UpkeepId
	}
	return ""
}

func (x *LogTriggerSimulateResult) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *LogTriggerSimulateResult) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *LogTriggerSimulateResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type AutomationTelemWrapper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Msg:
	//
	//	*AutomationTelemWrapper_StreamsLookup
	//	*AutomationTelemWrapper_StreamsResponse
	//	*AutomationTelemWrapper_StreamsCheckcallback
	//	*AutomationTelemWrapper_LogTrigger
	//	*AutomationTelemWrapper_LogTriggerSimulateResult
	Msg isAutomationTelemWrapper_Msg `protobuf_oneof:"msg"`
}

func (x *AutomationTelemWrapper) Reset() {
	*x = AutomationTelemWrapper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telem_automation_custom_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutomationTelemWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutomationTelemWrapper) ProtoMessage() {}

func (x *AutomationTelemWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_telem_automation_custom_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutomationTelemWrapper.ProtoReflect.Descriptor instead.
func (*AutomationTelemWrapper) Descriptor() ([]byte, []int) {
	return file_telem_automation_custom_proto_rawDescGZIP(), []int{7}
}

func (m *AutomationTelemWrapper) GetMsg() isAutomationTelemWrapper_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *AutomationTelemWrapper) GetStreamsLookup() *StreamsLookup {
	if x, ok := x.GetMsg().(*AutomationTelemWrapper_StreamsLookup); ok {
		return x.StreamsLookup
	}
	return nil
}

func (x *AutomationTelemWrapper) GetStreamsResponse() *StreamsResponse {
	if x, ok := x.GetMsg().(*AutomationTelemWrapper_StreamsResponse); ok {
		return x.StreamsResponse
	}
	return nil
}

func (x *AutomationTelemWrapper) GetStreamsCheckcallback() *StreamsCheckCallback {
	if x, ok := x.GetMsg().(*AutomationTelemWrapper_StreamsCheckcallback); ok {
		return x.StreamsCheckcallback
	}
	return nil
}

func (x *AutomationTelemWrapper) GetLogTrigger() *LogTrigger {
	if x, ok := x.GetMsg().(*AutomationTelemWrapper_LogTrigger); ok {
		return x.LogTrigger
	}
	return nil
}

func (x *AutomationTelemWrapper) GetLogTriggerSimulateResult() *LogTriggerSimulateResult {
	if x, ok := x.GetMsg().(*AutomationTelemWrapper_LogTriggerSimulateResult); ok {
		return x.LogTriggerSimulateResult
	}
	return nil
}

type isAutomationTelemWrapper_Msg interface {
	isAutomationTelemWrapper_Msg()
}

type AutomationTelemWrapper_StreamsLookup struct {
	StreamsLookup *StreamsLookup `protobuf:"bytes,1,opt,name=streams_lookup,json=streamsLookup,proto3,oneof"`
}

type AutomationTelemWrapper_StreamsResponse struct {
	StreamsResponse *StreamsResponse `protobuf:"bytes,2,opt,name=streams_response,json=streamsResponse,proto3,oneof"`
}

type AutomationTelemWrapper_StreamsCheckcallback struct {
	StreamsCheckcallback *StreamsCheckCallback `protobuf:"bytes,3,opt,name=streams_checkcallback,json=streamsCheckcallback,proto3,oneof"`
}

type AutomationTelemWrapper_LogTrigger struct {
	LogTrigger *LogTrigger `protobuf:"bytes,4,opt,name=log_trigger,json=logTrigger,proto3,oneof"`
}

type AutomationTelemWrapper_LogTriggerSimulateResult struct {
	LogTriggerSimulateResult *LogTriggerSimulateResult `protobuf:"bytes,5,opt,name=log_trigger_simulate_result,json=logTriggerSimulateResult,proto3,oneof"`
}

func (*AutomationTelemWrapper_StreamsLookup) isAutomationTelemWrapper_Msg() {}

func (*AutomationTelemWrapper_StreamsResponse) isAutomationTelemWrapper_Msg() {}

func (*AutomationTelemWrapper_StreamsCheckcallback) isAutomationTelemWrapper_Msg() {}

func (*AutomationTelemWrapper_LogTrigger) isAutomationTelemWrapper_Msg() {}

func (*AutomationTelemWrapper_LogTriggerSimulateResult) isAutomationTelemWrapper_Msg() {}

var File_telem_automation_custom_proto protoreflect.FileDescriptor

var file_telem_automation_custom_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x22, 0x86, 0x01, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x73, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x73, 0x61, 0x6d, 0x70, 0x12, 0x21, 0x0a,
	0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x22,
	0x67, 0x0a, 0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x17,
	0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x74,
	0x73, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x74, 0x73, 0x61, 0x6d, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6e, 0x6f, 0x64,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xa2, 0x01, 0x0a, 0x0d, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x73, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70,
	0x6b, 0x65, 0x65, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x70, 0x6b, 0x65, 0x65, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x65, 0x65, 0x64, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x66, 0x65, 0x65, 0x64, 0x73, 0x22, 0x90, 0x02,
	0x0a, 0x0f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x6b, 0x65, 0x65, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x6b, 0x65, 0x65, 0x70, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x65, 0x65, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x66, 0x65, 0x65, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x0f, 0x68, 0x74, 0x74, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x74, 0x72, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x72, 0x65, 0x74, 0x72, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x22, 0xc0, 0x01, 0x0a, 0x14, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x6b,
	0x65, 0x65, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70,
	0x6b, 0x65, 0x65, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x23,
	0x0a, 0x0d, 0x75, 0x70, 0x6b, 0x65, 0x65, 0x70, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x75, 0x70, 0x6b, 0x65, 0x65, 0x70, 0x4e, 0x65, 0x65,
	0x64, 0x65, 0x64, 0x22, 0xba, 0x01, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x6b, 0x65, 0x65, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x6b, 0x65, 0x65, 0x70, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x28, 0x0a, 0x10, 0x6c, 0x6f, 0x67, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6c, 0x6f, 0x67, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x6f,
	0x67, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68,
	0x22, 0x92, 0x01, 0x0a, 0x18, 0x4c, 0x6f, 0x67, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53,
	0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x75, 0x70, 0x6b, 0x65, 0x65, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x70, 0x6b, 0x65, 0x65, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x8f, 0x03, 0x0a, 0x16, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72,
	0x12, 0x3d, 0x0a, 0x0e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x5f, 0x6c, 0x6f, 0x6f, 0x6b,
	0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d,
	0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x48, 0x00,
	0x52, 0x0d, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x12,
	0x43, 0x0a, 0x10, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x65, 0x6c, 0x65,
	0x6d, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x15, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x5f,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x2e, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x48, 0x00, 0x52, 0x14, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x34, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x5f,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x74, 0x65, 0x6c, 0x65, 0x6d, 0x2e, 0x4c, 0x6f, 0x67, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x60,
	0x0a, 0x1b, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x69,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x2e, 0x4c, 0x6f, 0x67, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x18, 0x6c, 0x6f, 0x67, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x42, 0x05, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x42, 0x4e, 0x5a, 0x4c, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x6b, 0x69, 0x74, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x6b,
	0x2f, 0x76, 0x32, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2f, 0x73, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_telem_automation_custom_proto_rawDescOnce sync.Once
	file_telem_automation_custom_proto_rawDescData = file_telem_automation_custom_proto_rawDesc
)

func file_telem_automation_custom_proto_rawDescGZIP() []byte {
	file_telem_automation_custom_proto_rawDescOnce.Do(func() {
		file_telem_automation_custom_proto_rawDescData = protoimpl.X.CompressGZIP(file_telem_automation_custom_proto_rawDescData)
	})
	return file_telem_automation_custom_proto_rawDescData
}

var file_telem_automation_custom_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_telem_automation_custom_proto_goTypes = []interface{}{
	(*BlockNumber)(nil),              // 0: telem.BlockNumber
	(*NodeVersion)(nil),              // 1: telem.NodeVersion
	(*StreamsLookup)(nil),            // 2: telem.StreamsLookup
	(*StreamsResponse)(nil),          // 3: telem.StreamsResponse
	(*StreamsCheckCallback)(nil),     // 4: telem.StreamsCheckCallback
	(*LogTrigger)(nil),               // 5: telem.LogTrigger
	(*LogTriggerSimulateResult)(nil), // 6: telem.LogTriggerSimulateResult
	(*AutomationTelemWrapper)(nil),   // 7: telem.AutomationTelemWrapper
}
var file_telem_automation_custom_proto_depIdxs = []int32{
	2, // 0: telem.AutomationTelemWrapper.streams_lookup:type_name -> telem.StreamsLookup
	3, // 1: telem.AutomationTelemWrapper.streams_response:type_name -> telem.StreamsResponse
	4, // 2: telem.AutomationTelemWrapper.streams_checkcallback:type_name -> telem.StreamsCheckCallback
	5, // 3: telem.AutomationTelemWrapper.log_trigger:type_name -> telem.LogTrigger
	6, // 4: telem.AutomationTelemWrapper.log_trigger_simulate_result:type_name -> telem.LogTriggerSimulateResult
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_telem_automation_custom_proto_init() }
func file_telem_automation_custom_proto_init() {
	if File_telem_automation_custom_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_telem_automation_custom_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockNumber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_telem_automation_custom_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_telem_automation_custom_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamsLookup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_telem_automation_custom_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_telem_automation_custom_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamsCheckCallback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_telem_automation_custom_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogTrigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_telem_automation_custom_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogTriggerSimulateResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_telem_automation_custom_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutomationTelemWrapper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_telem_automation_custom_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*AutomationTelemWrapper_StreamsLookup)(nil),
		(*AutomationTelemWrapper_StreamsResponse)(nil),
		(*AutomationTelemWrapper_StreamsCheckcallback)(nil),
		(*AutomationTelemWrapper_LogTrigger)(nil),
		(*AutomationTelemWrapper_LogTriggerSimulateResult)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_telem_automation_custom_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_telem_automation_custom_proto_goTypes,
		DependencyIndexes: file_telem_automation_custom_proto_depIdxs,
		MessageInfos:      file_telem_automation_custom_proto_msgTypes,
	}.Build()
	File_telem_automation_custom_proto = out.File
	file_telem_automation_custom_proto_rawDesc = nil
	file_telem_automation_custom_proto_goTypes = nil
	file_telem_automation_custom_proto_depIdxs = nil
}
