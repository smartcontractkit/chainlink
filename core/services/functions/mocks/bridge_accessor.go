// Code generated by mockery v2.28.1. DO NOT EDIT.

package mocks

import (
	functions "github.com/smartcontractkit/chainlink/v2/core/services/functions"
	mock "github.com/stretchr/testify/mock"
)

// BridgeAccessor is an autogenerated mock type for the BridgeAccessor type
type BridgeAccessor struct {
	mock.Mock
}

// NewExternalAdapterClient provides a mock function with given fields:
func (_m *BridgeAccessor) NewExternalAdapterClient() (functions.ExternalAdapterClient, error) {
	ret := _m.Called()

	var r0 functions.ExternalAdapterClient
	var r1 error
	if rf, ok := ret.Get(0).(func() (functions.ExternalAdapterClient, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() functions.ExternalAdapterClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(functions.ExternalAdapterClient)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewBridgeAccessor interface {
	mock.TestingT
	Cleanup(func())
}

// NewBridgeAccessor creates a new instance of BridgeAccessor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewBridgeAccessor(t mockConstructorTestingTNewBridgeAccessor) *BridgeAccessor {
	mock := &BridgeAccessor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
