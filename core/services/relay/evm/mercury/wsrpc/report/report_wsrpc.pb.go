// Code generated by protoc-gen-go-wsrpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-wsrpc v0.0.1
// - protoc             v3.21.12

package report

import (
	context "context"
	wsrpc "github.com/smartcontractkit/wsrpc"
)

// ReportClient is the client API for Report service.
//
type ReportClient interface {
	Transmit(ctx context.Context, in *ReportRequest) (*ReportResponse, error)
}

type reportClient struct {
	cc wsrpc.ClientInterface
}

func NewReportClient(cc wsrpc.ClientInterface) ReportClient {
	return &reportClient{cc}
}

func (c *reportClient) Transmit(ctx context.Context, in *ReportRequest) (*ReportResponse, error) {
	out := new(ReportResponse)
	err := c.cc.Invoke(ctx, "Transmit", in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReportServer is the server API for Report service.
type ReportServer interface {
	Transmit(context.Context, *ReportRequest) (*ReportResponse, error)
}

func RegisterReportServer(s wsrpc.ServiceRegistrar, srv ReportServer) {
	s.RegisterService(&Report_ServiceDesc, srv)
}

func _Report_Transmit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(ReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	return srv.(ReportServer).Transmit(ctx, in)
}

// Report_ServiceDesc is the wsrpc.ServiceDesc for Report service.
// It's only intended for direct use with wsrpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Report_ServiceDesc = wsrpc.ServiceDesc{
	ServiceName: "report.Report",
	HandlerType: (*ReportServer)(nil),
	Methods: []wsrpc.MethodDesc{
		{
			MethodName: "Transmit",
			Handler:    _Report_Transmit_Handler,
		},
	},
}
