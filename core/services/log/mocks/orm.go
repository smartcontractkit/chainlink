// Code generated by mockery 2.7.4. DO NOT EDIT.

package mocks

import (
	common "github.com/ethereum/go-ethereum/common"

	mock "github.com/stretchr/testify/mock"
)

// ORM is an autogenerated mock type for the ORM type
type ORM struct {
	mock.Mock
}

// MarkBroadcastConsumed provides a mock function with given fields: blockHash, blockNumber, logIndex, jobID
func (_m *ORM) MarkBroadcastConsumed(blockHash common.Hash, blockNumber uint64, logIndex uint, jobID interface{}) error {
	ret := _m.Called(blockHash, blockNumber, logIndex, jobID)

	var r0 error
	if rf, ok := ret.Get(0).(func(common.Hash, uint64, uint, interface{}) error); ok {
		r0 = rf(blockHash, blockNumber, logIndex, jobID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WasBroadcastConsumed provides a mock function with given fields: blockHash, logIndex, jobID
func (_m *ORM) WasBroadcastConsumed(blockHash common.Hash, logIndex uint, jobID interface{}) (bool, error) {
	ret := _m.Called(blockHash, logIndex, jobID)

	var r0 bool
	if rf, ok := ret.Get(0).(func(common.Hash, uint, interface{}) bool); ok {
		r0 = rf(blockHash, logIndex, jobID)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(common.Hash, uint, interface{}) error); ok {
		r1 = rf(blockHash, logIndex, jobID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
