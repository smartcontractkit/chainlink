// Code generated by mockery v2.35.4. DO NOT EDIT.

package mocks

import (
	ldapauth "github.com/smartcontractkit/chainlink/v2/core/sessions/ldapauth"
	mock "github.com/stretchr/testify/mock"
)

// LDAPClient is an autogenerated mock type for the LDAPClient type
type LDAPClient struct {
	mock.Mock
}

// CreateEphemeralConnection provides a mock function with given fields:
func (_m *LDAPClient) CreateEphemeralConnection() (ldapauth.LDAPConn, error) {
	ret := _m.Called()

	var r0 ldapauth.LDAPConn
	var r1 error
	if rf, ok := ret.Get(0).(func() (ldapauth.LDAPConn, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() ldapauth.LDAPConn); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ldapauth.LDAPConn)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewLDAPClient creates a new instance of LDAPClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewLDAPClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *LDAPClient {
	mock := &LDAPClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
