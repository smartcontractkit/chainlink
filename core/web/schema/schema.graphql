scalar Time

schema {
    query: Query
    mutation: Mutation
}

type Query {
    bridge(name: String!): BridgePayload!
    bridges(offset: Int, limit: Int): BridgesPayload!
    chain(id: ID!): Chain!
    chains(offset: Int, limit: Int): [Chain!]!
    feedsManager(id: ID!): FeedsManagerPayload!
    feedsManagers: FeedsManagersPayload!
    ocrKeyBundles: OCRKeyBundlesPayload!
}

type Mutation {
    createBridge(input: CreateBridgeInput!): CreateBridgePayload!
    createFeedsManager(input: CreateFeedsManagerInput!): CreateFeedsManagerPayload!
    updateBridge(name: String!, input: UpdateBridgeInput!): UpdateBridgePayload!
    updateFeedsManager(id: ID!, input: UpdateFeedsManagerInput!): UpdateFeedsManagerPayload!
}
