enum JobType {
	FLUX_MONITOR
	OCR
}

type FeedsManager {
	id: ID!
	name: String!
	uri: String!
	publicKey: String!
	jobTypes: [JobType!]!
	isBootstrapPeer: Boolean!
	bootstrapPeerMultiaddr: String
	isConnectionActive: Boolean!
	createdAt: Time!
}

# FeedsManagerPayload defines the response to fetch a single feeds manager by id
union FeedsManagerPayload = FeedsManager | NotFoundError

# FeedsManagersPayload defines the response when fetching feeds managers
type FeedsManagersPayload {
    results: [FeedsManager!]!
}

input CreateFeedsManagerInput {
	name: String!
	uri: String!
	publicKey: String!
	jobTypes: [JobType!]!
	isBootstrapPeer: Boolean!
	bootstrapPeerMultiaddr: String
}

# CreateFeedsManagerSuccess defines the success response when creating a feeds
# manager
type CreateFeedsManagerSuccess {
    feedsManager: FeedsManager!
}

type SingleFeedsManagerError implements Error {
	message: String!
	code: ErrorCode!
}

# CreateFeedsManagerPayload defines the response when creating a feeds manager
union CreateFeedsManagerPayload = CreateFeedsManagerSuccess
	| SingleFeedsManagerError
	| NotFoundError
	| InputErrors