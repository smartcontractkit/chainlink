enum JobProposalStatus {
    PENDING
    APPROVED
    REJECTED
    CANCELLED
}

type JobProposal {
    id: ID!
    spec: String!
    status: JobProposalStatus!
    externalJobID: String
    feedsManager: FeedsManager!
    multiAddrs: [String!]!
    proposedAt: Time!
}

union JobProposalPayload = JobProposal | NotFoundError

type ApproveJobProposalSuccess {
    jobProposal: JobProposal!
}

union ApproveJobProposalPayload = ApproveJobProposalSuccess | NotFoundError

type CancelJobProposalSuccess {
    jobProposal: JobProposal!
}

union CancelJobProposalPayload = CancelJobProposalSuccess | NotFoundError

type RejectJobProposalSuccess {
    jobProposal: JobProposal!
}

union RejectJobProposalPayload = RejectJobProposalSuccess | NotFoundError

input UpdateJobProposalSpecInput {
    spec: String!
}

type UpdateJobProposalSpecSuccess {
    jobProposal: JobProposal!
}

union UpdateJobProposalSpecPayload = UpdateJobProposalSpecSuccess | NotFoundError
