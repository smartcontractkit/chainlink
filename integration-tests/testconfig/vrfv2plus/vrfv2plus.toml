# default config
[Common]
chainlink_node_funding = 0.1

[VRFv2Plus]
[VRFv2Plus.General]
max_gas_price_gwei = 10
link_native_feed_response = 1000000000000000000
minimum_confirmations = 3
subscription_billing_type = "LINK_AND_NATIVE"
subscription_funding_amount_link = 5.0
number_of_words = 3
callback_gas_limit = 1000000
max_gas_limit_coordinator_config = 2500000
fallback_wei_per_unit_link = 60000000000000000
staleness_seconds = 86400
gas_after_payment_calculation = 33825
fulfilment_flat_fee_link_ppm_tier_1 = 500
fulfilment_flat_fee_link_ppm_tier_2 = 500
fulfilment_flat_fee_link_ppm_tier_3 = 500
fulfilment_flat_fee_link_ppm_tier_4 = 500
fulfilment_flat_fee_link_ppm_tier_5 = 500
reqs_for_tier_2 = 0
reqs_for_tier_3 = 0
reqs_for_tier_4 = 0
reqs_for_tier_5 = 0
number_of_sub_to_create = 1
randomness_request_count_per_request = 1
randomness_request_count_per_request_deviation = 0
random_words_fulfilled_event_timeout = "2m"
wrapped_gas_overhead = 50000
coordinator_gas_overhead = 52000
wrapper_premium_percentage = 25
wrapper_max_number_of_words = 10
wrapper_consumer_funding_amount_native_token = 1.0
wrapper_consumer_funding_amount_link = 10
subscription_funding_amount_native=1
fulfillment_flat_fee_link_ppm=500
fulfillment_flat_fee_native_ppm=500

# load test specific config
[Load.VRFv2Plus]
[Load.VRFv2Plus.Common]
cancel_subs_after_test_run = true

[Load.VRFv2Plus.General]
minimum_confirmations = 3
randomness_request_count_per_request = 3 # amount of randomness requests to make per one TX request
randomness_request_count_per_request_deviation = 2 #NOTE - deviation should be less than randomness_request_count_per_request setting
number_of_sub_to_create = 1

[Load.VRFv2Plus.Performance]
test_duration = "2m"
# approx 60 RPM - 1 tx request with 3 rand requests in each tx every 3 seconds
rate_limit_unit_duration = "3s"
rps = 1

[Load.VRFv2Plus.NewEnv]
sub_funds_link = 1
sub_funds_native = 1
node_funds = 10
node_sending_key_funding = 1000

[Load.VRFv2Plus.ExistingEnv]
sub_id = 1
create_fund_subs_and_add_consumers = true
link_address = ""
sub_funds_link = 10
node_sending_key_funding_min = 1
node_sending_keys = []

# soak test specific config
[Soak.VRFv2Plus]
[Soak.VRFv2Plus.Common]
cancel_subs_after_test_run = true

[Soak.VRFv2Plus.General]
minimum_confirmations = 3
randomness_request_count_per_request = 1 # amount of randomness requests to make per one TX request
randomness_request_count_per_request_deviation = 0 #NOTE - deviation should be less than randomness_request_count_per_request setting
number_of_sub_to_create = 1

[Soak.VRFv2Plus.Performance]
test_duration = "2m"
# 10 RPM - 1 tx request with 1 rand request in each tx every 6 seconds
rate_limit_unit_duration = "6s"
rps = 1
use_existing_env = false

[Soak.VRFv2Plus.NewEnv]
sub_funds_link = 1
sub_funds_native = 1
node_funds = 10
node_sending_key_funding = 1000

[Soak.VRFv2Plus.ExistingEnv]
sub_id = 1
create_fund_subs_and_add_consumers = true
sub_funds_link = 10
node_sending_key_funding_min = 1
node_sending_keys = []

# spike test specific config
[Spike.VRFv2Plus]
[Spike.VRFv2Plus.Common]
cancel_subs_after_test_run = true

[Spike.VRFv2Plus.General]
minimum_confirmations = 3
randomness_request_count_per_request = 150 # amount of randomness requests to make per one TX request
randomness_request_count_per_request_deviation = 0 #NOTE - deviation should be less than randomness_request_count_per_request setting
number_of_sub_to_create = 1

[Spike.VRFv2Plus.Performance]
test_duration = "2m"
# approx 150 RPM - 1 tx request with 150 rand requests in each tx every 60 seconds
rate_limit_unit_duration = "1m"
rps = 1

[Spike.VRFv2Plus.NewEnv]
sub_funds_link = 1
sub_funds_native = 1
node_funds = 10
node_sending_key_funding = 1000

[Spike.VRFv2Plus.ExistingEnv]
sub_id = 1
create_fund_subs_and_add_consumers = true
sub_funds_link = 10
node_sending_key_funding_min = 1
node_sending_keys = []

# stress test specific config
[Stress.VRFv2Plus]
[Stress.VRFv2Plus.Common]
cancel_subs_after_test_run = true

[Stress.VRFv2Plus.General]
minimum_confirmations = 3
randomness_request_count_per_request = 4 # amount of randomness requests to make per one TX request
randomness_request_count_per_request_deviation = 0 #NOTE - deviation should be less than randomness_request_count_per_request setting
number_of_sub_to_create = 1

[Stress.VRFv2Plus.Performance]
test_duration = "2m"
# approx 540 RPM - 3 tx requests per second with 4 rand requests in each tx
rate_limit_unit_duration = "1s"
rps = 3

[Stress.VRFv2Plus.NewEnv]
sub_funds_link = 1
sub_funds_native = 1
node_funds = 10
node_sending_key_funding = 1000

[Stress.VRFv2Plus.ExistingEnv]
sub_id = 1
create_fund_subs_and_add_consumers = true
sub_funds_link = 10
node_sending_key_funding_min = 1
node_sending_keys = []