#!/usr/bin/env bash
set -o pipefail
set +e

echo "Failed tests and panics: ---------------------"
echo ""
GO_LDFLAGS=$(bash tools/bin/ldflags)
go test -ldflags "$GO_LDFLAGS" -tags integration -p 3 -parallel 4 -coverprofile=coverage.txt -covermode=atomic ./... | tee ./output.txt | grep --line-buffered --line-number -e "\-\-\- FAIL" -e "FAIL\s"
EXITCODE=${PIPESTATUS[0]}
echo ""
echo "----------------------------------------------"

echo ""
echo "(Note: panics abruptly end the test run and may appear out-of-place, not where they originate."
echo "Finding their origin test may involve disabling parallelism)"
echo ""
echo "Potentially related:"
echo ""

grep --after-context=2 --group-separator=$'---' "panic: " output.txt
grep --group-separator=$'---' "driver: bad connection" output.txt

echo "Exit code: $EXITCODE"
if [[ $EXITCODE != 0 ]]; then
  echo "Encountered test failures."
else
  echo "All tests passed!"
  # uploading coverage.txt to CodeCov
  $(dirname "$0")/codecov -f coverage.txt
fi
exit $EXITCODE
