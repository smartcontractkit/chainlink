#!/bin/sh

export DOCKER_BUILDKIT=1
export COMPOSE_DOCKER_CLI_BUILD=1

base_files="-f docker-compose.yaml -f docker-compose.postgres.yaml"
# Allow for choosing between geth or parity
if [ $GETH_MODE ]; then
  base_files="$base_files -f docker-compose.gethnet.yaml"
else
  base_files="$base_files -f docker-compose.paritynet.yaml"
fi

base="docker-compose $base_files"
dev="$base -f docker-compose.dev.yaml"

clean_docker() {
  $base down -v --remove-orphans
  $dev down -v --remove-orphans
}

usage() {
  echo "compose -- A helper script for running common docker-compose commands\

Commands:
    help                  Displays this help menu
    clean                 Remove any containers and volumes related to compose files
    logs                  Display the logs of any service(s) by name
    dev                   Runs the chainlink node container in dev mode
    connect               Connect to chainlink node container
    up                    Run the chainlink cluster with base config
    eth:restart           Reset blockchain data to genesis state
    cl:restart            Reset chainlink database"
}

case "$1" in
help)
  usage
  ;;
clean)
  clean_docker
  ;;
logs)
  $base logs -f ${@:2}
  ;;
dev)
  $dev build
  $dev up -d node
  $dev watch --no-up node
  ;;
connect)
  docker exec -it chainlink-node bash
  ;;
up)
  $base up
  ;;
eth:restart)
  $base rm --force --stop devnet
  if [ $GETH_MODE ]; then
    docker volume rm --force docker_geth-db-data
  else
    docker volume rm --force docker_parity-db-data
  fi
  $base up -d devnet
  ;;
cl:restart)
  $base stop node
  $base rm --force --stop node-db
  docker volume rm --force docker_node-db-data
  ./compose eth:restart
  $base start node
  ;;
*)
  $base $@
  ;;
esac
