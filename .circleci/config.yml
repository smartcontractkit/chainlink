version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.9.1
  aws-cli: circleci/aws-cli@1.1.0
jobs:
  core-go-test:
    resource_class: xlarge
    docker:
      - image: smartcontract/builder:1.0.33
      - image: circleci/postgres:11-alpine
        environment:
          POSTGRES_USER: circleci_postgres
          POSTGRES_DB: circleci_test
    environment:
      DATABASE_URL: postgres://circleci_postgres@localhost:5432/circleci_test?sslmode=disable
    steps:
      - checkout
      - run: echo $CACHE_VERSION > cache.version
      - restore_cache:
          name: Restore Yarn Package Cache
          key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
      - run: make yarndep
      - save_cache:
          name: Save Yarn Package Cache
          key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
          paths:
            - /usr/local/share/.cache/yarn
      - restore_cache:
          name: Restore Go Vendor Cache
          key: go-mod-{{ checksum "go.sum" }}
      - run: go mod download
      - save_cache:
          name: Save Go Vendor Cache
          key: go-mod-{{ checksum "go.sum" }}
          paths:
            - '/go/pkg/mod'
      - run: yarn setup:contracts
      - run: go run ./core local db preparetest
      - run: go test -v -p 4 -parallel 4 ./...
  rust:
    docker:
      - image: smartcontract/builder:1.0.33
    steps:
      - checkout
      - run: ./tools/ci/rust_test
  geth-postgres:
    resource_class: 2xlarge
    environment:
      GETH_MODE: true
    machine:
      image: ubuntu-1604:201903-01
      docker_layer_caching: true
    working_directory: ~/chainlink
    steps:
      - run: sudo rm -rf /usr/local/{gradle-1.10,go,android-ndk}
      - run: sudo rm -rf /usr/share/emacs
      - run: sudo rm -rf /usr/lib/{jvm,google-cloud-sdk,heroku}
      - run: sudo rm -rf /home/circleci/.npm
      - run: sudo rm -rf /opt/{google-cloud-sdk,google,firefox,circleci}
      - checkout
      - run: cd ./tools/docker && timeout --foreground 1200s ./compose test
      - store_artifacts:
          path: ./tools/docker/logs
  geth-postgres-ts:
    resource_class: 2xlarge
    environment:
      GETH_MODE: true
    machine:
      image: ubuntu-1604:201903-01
      docker_layer_caching: true
    working_directory: ~/chainlink
    steps:
      - run: sudo rm -rf /usr/local/{gradle-1.10,go,android-ndk}
      - run: sudo rm -rf /usr/share/emacs
      - run: sudo rm -rf /usr/lib/{jvm,google-cloud-sdk,heroku}
      - run: sudo rm -rf /home/circleci/.npm
      - run: sudo rm -rf /opt/{google-cloud-sdk,google,firefox,circleci}
      - checkout
      - run: cd ./tools/docker && timeout --foreground 1200s ./compose test:ts
      - store_artifacts:
          path: ./tools/docker/logs
  parity-postgres:
    resource_class: 2xlarge
    machine:
      image: ubuntu-1604:201903-01
      docker_layer_caching: true
    working_directory: ~/chainlink
    steps:
      - run: sudo rm -rf /usr/local/{gradle-1.10,go,android-ndk}
      - run: sudo rm -rf /usr/share/emacs
      - run: sudo rm -rf /usr/lib/{jvm,google-cloud-sdk,heroku}
      - run: sudo rm -rf /home/circleci/.npm
      - run: sudo rm -rf /opt/{google-cloud-sdk,google,firefox,circleci}
      - checkout
      - run: cd ./tools/docker && timeout --foreground 1200s ./compose test
      - store_artifacts:
          path: ./tools/docker/logs
  parity-postgres-ts:
    resource_class: 2xlarge
    machine:
      image: ubuntu-1604:201903-01
      docker_layer_caching: true
    working_directory: ~/chainlink
    steps:
      - run: sudo rm -rf /usr/local/{gradle-1.10,go,android-ndk}
      - run: sudo rm -rf /usr/share/emacs
      - run: sudo rm -rf /usr/lib/{jvm,google-cloud-sdk,heroku}
      - run: sudo rm -rf /home/circleci/.npm
      - run: sudo rm -rf /opt/{google-cloud-sdk,google,firefox,circleci}
      - checkout
      - run: cd ./tools/docker && timeout --foreground 1200s ./compose test:ts
      - store_artifacts:
          path: ./tools/docker/logs
  solidity:
    resource_class: xlarge
    docker:
      - image: smartcontract/builder:1.0.33
    steps:
      - checkout
      - run: echo $CACHE_VERSION > cache.version
      - restore_cache:
          name: Restore Yarn Package Cache
          key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
      - run: make yarndep
      - save_cache:
          name: Save Yarn Package Cache
          key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
          paths:
            - /usr/local/share/.cache/yarn
      - run: ./tools/ci/solidity_test
      - store_artifacts:
          path: ./integration/logs
  styleguide:
    docker:
      - image: smartcontract/builder:1.0.33
    steps:
      - checkout
      - run: echo $CACHE_VERSION > cache.version
      - restore_cache:
          name: Restore Yarn Package Cache
          key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
      - run: make yarndep
      - save_cache:
          name: Save Yarn Package Cache
          key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
          paths:
            - /usr/local/share/.cache/yarn
      - run: yarn workspace @chainlink/styleguide run test
  json-api-client:
    docker:
      - image: smartcontract/builder:1.0.33
    steps:
      - checkout
      - run: echo $CACHE_VERSION > cache.version
      - restore_cache:
          name: Restore Yarn Package Cache
          key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
      - run: make yarndep
      - save_cache:
          name: Save Yarn Package Cache
          key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
          paths:
            - /usr/local/share/.cache/yarn
      - run: yarn workspace @chainlink/json-api-client run test
  operator-ui:
    resource_class: xlarge
    docker:
      - image: smartcontract/builder:1.0.33
    steps:
      - checkout
      - run: echo $CACHE_VERSION > cache.version
      - restore_cache:
          name: Restore Yarn Package Cache
          key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
      - run: make yarndep
      - save_cache:
          name: Save Yarn Package Cache
          key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
          paths:
            - /usr/local/share/.cache/yarn
      - run: ./tools/ci/init_gcloud
      - run: ./tools/ci/operator_ui_test
      - store_artifacts:
          path: ./integration/logs
  explorer:
    resource_class: xlarge
    working_directory: ~/chainlink
    docker:
      - image: circleci/node:10.16.3-browsers
        environment:
          TYPEORM_NAME: ci
      - image: circleci/postgres:11-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: explorer_test
    steps:
      - checkout:
          path: ~/chainlink
      - run: echo $CACHE_VERSION > cache.version
      - restore_cache:
          name: Restore Yarn Package Cache
          key: v{{ checksum "cache.version" }}-yarn-vendor-node:10.16.3-browsers-{{ checksum "yarn.lock" }}
      - run:
          name: Install New Packages
          command: make yarndep
      - save_cache:
          name: Save Yarn Package Cache
          key: v{{ checksum "cache.version" }}-yarn-vendor-node:10.16.3-browsers-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - /usr/local/share/.cache/yarn
      - run: yarn workspace @chainlink/explorer setup
      - run: yarn workspace @chainlink/explorer run test:migration:run
      - run:
          name: Run Server Tests
          command: yarn workspace @chainlink/explorer run test:ci
      - run:
          name: Run Client dependency setup
          command: yarn workspace @chainlink/explorer-client run setup
      - run:
          name: Run Client Tests
          command: yarn workspace @chainlink/explorer-client run test:ci
      - store_artifacts:
          path: ./integration/logs
  feeds:
    docker:
      - image: smartcontract/builder:1.0.33
    steps:
      - checkout
      - run: echo $CACHE_VERSION > cache.version
      - restore_cache:
          name: Restore Yarn Package Cache
          key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
      - run: make yarndep
      - save_cache:
          name: Save Yarn Package Cache
          key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
          paths:
            - /usr/local/share/.cache/yarn
      - run:
          name: Run dependency setup
          command: yarn workspace @chainlink/feeds run setup
      - run:
          name: Run Tests
          command: yarn workspace @chainlink/feeds run test
  forks:
    machine:
      image: ubuntu-1604:201903-01
      docker_layer_caching: true
    working_directory: ~/chainlink
    steps:
      - checkout
      - run:
          name: Install Yarn
          command: npm install -g yarn
      - run:
          name: Install New Packages
          command: make yarndep
      - run: ./tools/ci/forks_test
      - store_artifacts:
          path: ./integration/forks/logs
  build-publish-explorer:
    machine:
      image: circleci/classic:201808-01
      docker_layer_caching: true
    steps:
      - checkout
      - run:
          name: Docker login
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USER" --password-stdin
      - run:
          name: Docker build
          command: docker build -f explorer/Dockerfile -t smartcontract/explorer:circleci .
      - run:
          name: Docker push, if applicable
          command: |
            tools/ci/push_explorer "${CIRCLE_BRANCH}" "${CIRCLE_TAG}"
  build-publish-chainlink:
    resource_class: large
    machine:
      image: circleci/classic:201808-01
      docker_layer_caching: true
    steps:
      - checkout
      - run:
          name: Docker login
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USER" --password-stdin
      - run:
          name: Docker build
          command: |
            DOCKER_TAG=circleci make docker
      - run:
          name: Docker push, if applicable
          command: |
            tools/ci/push_chainlink "${CIRCLE_BRANCH}" "${CIRCLE_TAG}"
      - aws-cli/install
      - aws-cli/configure:
          aws-access-key-id: "AWS_ACCESS_KEY_ID"
          aws-region: "AWS_DEFAULT_REGION"
          aws-secret-access-key: "AWS_SECRET_ACCESS_KEY"
          version: "2"
      - aws-ecr/ecr-login:
          account-url: "AWS_ECR_ACCOUNT_URL"
          profile-name: "default"
          region: "AWS_REGION"
      - aws-ecr/push-image:
          account-url: "AWS_ECR_ACCOUNT_URL"
          repo: "${AWS_ECR_REPO}"
          tag: "${CIRCLE_TAG},${CIRCLE_SHA1}"
  build-chainlink-sgx:
    resource_class: xlarge
    machine:
      image: circleci/classic:201808-01
      docker_layer_caching: true
    steps:
      - checkout
      - run:
          name: Docker login
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USER" --password-stdin
      - run:
          name: Docker build
          command: |
            SGX_ENABLED=yes DOCKER_TAG=circleci make docker
  reportcoverage:
    docker:
      - image: smartcontract/builder:1.0.33
    steps:
      - checkout
      - run: ./tools/ci/init_gcloud
      - run: ./tools/ci/report_coverage
  check_if_rebase_needed:
    resource_class: small
    working_directory: ~/chainlink
    docker:
      - image: alpine/git
    steps:
      - checkout
      - run: tools/bin/check_if_rebase_needed
  lint:
    resource_class: large
    working_directory: ~/chainlink
    docker:
      - image: smartcontract/builder:1.0.33
    steps:
      - checkout
      - run: echo $CACHE_VERSION > cache.version
      - restore_cache:
          name: Restore Yarn Package Cache
          key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
      - run: make yarndep
      - run: yarn lint
      - save_cache:
          name: Save Yarn Package Cache
          key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
          paths:
            - /usr/local/share/.cache/yarn
  prepublish_npm:
    resource_class: xlarge
    docker:
      - image: smartcontract/builder:1.0.33
    environment:
      NODE_OPTIONS: --max_old_space_size=512
    steps:
      - checkout
      - run: echo $CACHE_VERSION > cache.version
      - restore_cache:
          name: Restore Yarn Package Cache
          key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
      - run: make yarndep
      - save_cache:
          name: Save Yarn Package Cache
          key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
          paths:
            - /usr/local/share/.cache/yarn
      - run: ./tools/ci/prepublish_npm_test

workflows:
  version: 2
  test:
    jobs:
      - check_if_rebase_needed:
          filters:
            tags:
              ignore:
                - /^v.*/
                - /^explorer-v.*/
            branches:
              ignore:
                - develop
                - /^release\/.*/
                - master
                - /^hotfix\/.*/
      - core-go-test:
          filters:
            tags:
              only: /^v.*/
      - solidity:
          filters:
            tags:
              only: /^v.*/
      - geth-postgres:
          filters:
            tags:
              only: /^v.*/
      - geth-postgres-ts:
          filters:
            tags:
              only: /^v.*/
      - parity-postgres:
          filters:
            tags:
              only: /^v.*/
      - parity-postgres-ts:
          filters:
            tags:
              only: /^v.*/
      - styleguide:
          filters:
            tags:
              only:
                - /^v.*/
                - /^explorer-v.*/
      - json-api-client:
          filters:
            tags:
              only:
                - /^v.*/
                - /^explorer-v.*/
      - operator-ui:
          filters:
            tags:
              only: /^v.*/
      - rust:
          filters:
            tags:
              only: /^v.*/
      - explorer:
          filters: # all branches, and /^explorer-v../ tags for build-publish...
            tags:
              only: /^explorer-v.*/
      - feeds:
          filters:
            tags:
              only:
                - /^v.*/
                - /^explorer-v.*/
      - lint:
          filters:
            tags:
              only:
                - /^v.*/
                - /^explorer-v.*/
      - prepublish_npm:
          filters:
            tags:
              only:
                - /^v.*/
                - /^explorer-v.*/
      - build-publish-explorer:
          requires:
            - styleguide
            - json-api-client
            - explorer
          filters:
            tags:
              only: /^explorer-v.*/
      - build-chainlink-sgx:
          filters:
            tags:
              only: /^v.*/
      - build-publish-chainlink:
          requires:
            - core-go-test
            - geth-postgres
            - parity-postgres
            - styleguide
            - json-api-client
            - operator-ui
            - rust
          filters:
            tags:
              only: /^v.*/
      - reportcoverage:
          requires:
            - core-go-test
            - solidity
            - operator-ui
            - rust
            - explorer
          filters:
            tags:
              ignore:
                - /^v.*/
                - /^explorer-v.*/
            branches:
              ignore:
                - develop
                - /^release\/.*/
                - master
                - /^hotfix\/.*/
