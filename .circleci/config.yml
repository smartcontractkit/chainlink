version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@4.0.1
jobs:
  go-sqlite:
    docker:
      - image: smartcontract/builder:1.0.23
    steps:
      - checkout
      - run: echo $CACHE_VERSION > cache.version
      - restore_cache:
          name: Restore Go Vendor Cache
          key: go-mod-{{ checksum "go.sum" }}
      - run: go mod download
      - save_cache:
          name: Save Go Vendor Cache
          key: go-mod-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run: ./tools/ci/init_gcloud
      - run: ./tools/ci/go_test | tee /tmp/go_test.txt
      - store_artifacts:
          path: /tmp/go_test.txt
  go-sqlite-race:
    resource_class: large
    docker:
      - image: smartcontract/builder:1.0.23
    steps:
      - checkout
      - run: echo $CACHE_VERSION > cache.version
      - restore_cache:
          name: Restore Go Vendor Cache
          key: go-mod-{{ checksum "go.sum" }}
      - save_cache:
          name: Save Go Vendor Cache
          key: go-mod-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run: ./tools/ci/gorace_test | tee /tmp/gorace_test.txt
      - store_artifacts:
          path: /tmp/gorace_test.txt
  go-postgres:
    docker:
      - image: smartcontract/builder:1.0.23
      - image: circleci/postgres:11-alpine
        environment:
          POSTGRES_USER: circleci_postgres
          POSTGRES_DB: circleci_test
    environment:
      DATABASE_URL: postgres://circleci_postgres@localhost:5432/circleci_test?sslmode=disable
    steps:
      - checkout
      - run: echo $CACHE_VERSION > cache.version
      - restore_cache:
          name: Restore Go Vendor Cache
          key: go-mod-{{ checksum "go.sum" }}
      - run: go mod download
      - save_cache:
          name: Save Go Vendor Cache
          key: go-mod-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run: ./tools/ci/go_single_threaded_test
  rust:
    docker:
      - image: smartcontract/builder:1.0.23
    steps:
      - checkout
      - run: echo $CACHE_VERSION > cache.version
      - restore_cache:
          name: Restore Go Vendor Cache
          key: go-mod-{{ checksum "go.sum" }}
      - save_cache:
          name: Save Go Vendor Cache
          key: go-mod-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run: ./tools/ci/rust_test
  sgx:
    docker:
      - image: smartcontract/builder:1.0.23
    environment:
      SGX_ENABLED: yes
      # XXX: These are set in the base image but circleci seems to wipe them out
      PATH: "/root/.cargo/bin:/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/sgxsdk/bin:/opt/sgxsdk/bin/x64"
      LD_LIBRARY_PATH: "/opt/sgxsdk/sdk_libs"
      SGX_SDK: "/opt/sgxsdk"
    steps:
      - checkout
      - run: echo $CACHE_VERSION > cache.version
      - restore_cache:
          name: Restore Go Vendor Cache
          key: go-mod-{{ checksum "go.sum" }}
      - save_cache:
          name: Save Go Vendor Cache
          key: go-mod-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run: make enclave
      - run: ./tools/ci/sgx_test
  geth-postgres:
    resource_class: xlarge
    docker:
      - image: smartcontract/builder:1.0.23
        environment:
          TYPEORM_NAME: ci
          TYPEORM_HOST: explorerdb
      - image: circleci/postgres:11
        environment:
          POSTGRES_USER: circleci_postgres
          POSTGRES_DB: circleci_test
          POSTGRES_INITDB_ARGS: "--lc-collate=C --lc-ctype=C"
      - image: circleci/postgres:11
        name: explorerdb
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: explorer_test
          POSTGRES_INITDB_ARGS: "--lc-collate=C --lc-ctype=C"
    environment:
      DATABASE_URL: postgres://circleci_postgres@localhost:5432/circleci_test?sslmode=disable
    steps:
      - checkout
      - run: echo $CACHE_VERSION > cache.version
      - restore_cache:
          name: Restore Go Vendor Cache
          key: go-mod-{{ checksum "go.sum" }}
      - save_cache:
          name: Save Go Vendor Cache
          key: go-mod-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run: ./tools/ci/ethereum_test
  parity-postgres:
    resource_class: large
    docker:
      - image: smartcontract/builder:1.0.23
        environment:
          TYPEORM_NAME: ci
          TYPEORM_HOST: explorerdb
      - image: circleci/postgres:11-alpine
        environment:
          POSTGRES_USER: circleci_postgres
          POSTGRES_DB: circleci_test
      - image: circleci/postgres:11-alpine
        name: explorerdb
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: explorer_test
      - image: smartcontract/devnet:latest
    environment:
      DATABASE_URL: postgres://circleci_postgres@localhost:5432/circleci_test?sslmode=disable
      ETH_WS_PORT: 8546
      ETH_HTTP_PORT: 8545
      MIN_OUTGOING_CONFIRMATIONS: 1
    steps:
      - checkout
      - run: echo $CACHE_VERSION > cache.version
      - restore_cache:
          name: Restore Go Vendor Cache
          key: go-mod-{{ checksum "go.sum" }}
      - save_cache:
          name: Save Go Vendor Cache
          key: go-mod-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run: ./tools/ci/ethereum_test parity
  truffle:
    docker:
      - image: smartcontract/builder:1.0.23
    steps:
      - checkout
      - run: echo $CACHE_VERSION > cache.version
      - restore_cache:
          name: Restore Yarn Package Cache
          key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
      - run: yarn install
      - save_cache:
          name: Save Yarn Package Cache
          key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
          paths:
            - /usr/local/share/.cache/yarn
      - run: pip3 install -r requirements.txt
      - run: ./tools/ci/truffle_test
  operator-ui:
    docker:
      - image: smartcontract/builder:1.0.23
    steps:
      - checkout
      - run: echo $CACHE_VERSION > cache.version
      - restore_cache:
          name: Restore Yarn Package Cache
          key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
      - run: yarn install
      - save_cache:
          name: Save Yarn Package Cache
          key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
          paths:
            - /usr/local/share/.cache/yarn
      - run: ./tools/ci/init_gcloud
      - run: ./tools/ci/operator_ui_test
  explorer:
    working_directory: ~/chainlink
    docker:
      - image: circleci/node:12-browsers
        environment:
          TYPEORM_NAME: ci
      - image: circleci/postgres:11-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: explorer_test
    steps:
      - checkout:
          path: ~/chainlink
      - run: echo $CACHE_VERSION > cache.version
      - restore_cache:
          name: Restore Yarn Package Cache
          key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}-node:10-browsers
      - run:
          name: Install New Packages
          command: yarn install
      - save_cache:
          name: Save Yarn Package Cache
          key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}-node:10-browsers
          paths:
            - ~/.cache/yarn
            - /usr/local/share/.cache/yarn
      - run:
          name: Run Lint
          command: yarn workspace @chainlink/explorer run lint
      - run:
          name: Run Server Tests
          command: yarn workspace @chainlink/explorer run test-ci:silent
      - run:
          name: Run Client Tests
          command: yarn workspace @chainlink/explorer-client run test-ci:silent
      - run:
          name: Run E2E Tests
          command: yarn workspace @chainlink/explorer-client run build && yarn workspace @chainlink/explorer run test-ci:e2e:silent
  build-explorer-image:
    machine: true
    steps:
      - checkout
      - run:
          name: Docker build
          command: docker build -f explorer/Dockerfile .
  build-and-publish-chainlink:
    machine: true
    steps:
      - checkout
      - run:
          name: Docker login
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USER" --password-stdin
      - run:
          name: Docker build
          command: |
            DOCKER_TAG=`tools/bin/branch2tag ${CIRCLE_BRANCH}` make docker
      - run:
          name: Docker push
          command: |
            DOCKER_TAG=`tools/bin/branch2tag ${CIRCLE_BRANCH}` make dockerpush
  reportcoverage:
    docker:
      - image: smartcontract/builder:1.0.23
    steps:
      - checkout
      - run: ./tools/ci/init_gcloud
      - run: ./tools/ci/report_coverage

workflows:
  version: 2
  test:
    jobs:
      - go-sqlite
      - go-sqlite-race
      - go-postgres
      - truffle
      - geth-postgres
      - parity-postgres
      - operator-ui
      - rust
      - explorer
      - build-explorer-image:
          filters:
            branches:
              ignore: master
      - build-and-publish-chainlink:
          requires:
            - go-sqlite
            - go-sqlite-race
            - go-postgres
            - truffle
            - geth-postgres
            - parity-postgres
            - operator-ui
            - rust
            - explorer
          filters:
            branches:
              only:
                - master
                - develop
                - /^hotfix\/.*/
                - /^release\/.*/
      - aws-ecr/build_and_push_image:
          requires:
            - explorer
          filters:
            branches:
              only: master
          path: ./explorer
          dockerfile: ./explorer/Dockerfile
          repo: explorer
      - reportcoverage:
          requires:
            - go-sqlite
            - operator-ui
