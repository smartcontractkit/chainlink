// SPDX-License-Identifier: MIT
// Warning: this is an autogenerated file! DO NOT EDIT.

pragma solidity ^0.8.6;

contract RewardLibEventsMock {
    event RewardAdded(uint256 amountAdded);
    event RewardInitialized(uint256 rate,uint256 available,uint256 startTimestamp,uint256 endTimestamp);
    event RewardRateChanged(uint256 rate);
    event RewardSlashed(address[] operator,uint256[] slashedBaseRewards,uint256[] slashedDelegatedRewards);
    event RewardWithdrawn(uint256 amount);
    function emitRewardAdded(uint256 amountAdded) public {
        emit RewardAdded(amountAdded);
    }
    function emitRewardInitialized(uint256 rate,uint256 available,uint256 startTimestamp,uint256 endTimestamp) public {
        emit RewardInitialized(rate,available,startTimestamp,endTimestamp);
    }
    function emitRewardRateChanged(uint256 rate) public {
        emit RewardRateChanged(rate);
    }
    function emitRewardSlashed(address[] memory operator,uint256[] memory slashedBaseRewards,uint256[] memory slashedDelegatedRewards) public {
        emit RewardSlashed(operator,slashedBaseRewards,slashedDelegatedRewards);
    }
    function emitRewardWithdrawn(uint256 amount) public {
        emit RewardWithdrawn(amount);
    }
}
