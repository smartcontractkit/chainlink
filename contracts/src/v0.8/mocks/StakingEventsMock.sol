// SPDX-License-Identifier: MIT
// Warning: this is an autogenerated file! DO NOT EDIT.

pragma solidity ^0.8.6;

contract StakingEventsMock {
    event AlertRaised(address alerter,uint256 roundId,uint256 rewardAmount);
    event MerkleRootChanged(bytes32 newMerkleRoot);
    event Migrated(address staker,uint256 principal,uint256 baseReward,uint256 delegationReward,bytes data);
    event MigrationTargetAccepted(address migrationTarget);
    event MigrationTargetProposed(address migrationTarget);
    event OwnershipTransferRequested(address indexed from,address indexed to);
    event OwnershipTransferred(address indexed from,address indexed to);
    event Paused(address account);
    event Staked(address staker,uint256 newStake,uint256 totalStake);
    event Unpaused(address account);
    event Unstaked(address staker,uint256 principal,uint256 baseReward,uint256 delegationReward);
    function emitAlertRaised(address alerter,uint256 roundId,uint256 rewardAmount) public {
        emit AlertRaised(alerter,roundId,rewardAmount);
    }
    function emitMerkleRootChanged(bytes32 newMerkleRoot) public {
        emit MerkleRootChanged(newMerkleRoot);
    }
    function emitMigrated(address staker,uint256 principal,uint256 baseReward,uint256 delegationReward,bytes memory data) public {
        emit Migrated(staker,principal,baseReward,delegationReward,data);
    }
    function emitMigrationTargetAccepted(address migrationTarget) public {
        emit MigrationTargetAccepted(migrationTarget);
    }
    function emitMigrationTargetProposed(address migrationTarget) public {
        emit MigrationTargetProposed(migrationTarget);
    }
    function emitOwnershipTransferRequested(address from,address to) public {
        emit OwnershipTransferRequested(from,to);
    }
    function emitOwnershipTransferred(address from,address to) public {
        emit OwnershipTransferred(from,to);
    }
    function emitPaused(address account) public {
        emit Paused(account);
    }
    function emitStaked(address staker,uint256 newStake,uint256 totalStake) public {
        emit Staked(staker,newStake,totalStake);
    }
    function emitUnpaused(address account) public {
        emit Unpaused(account);
    }
    function emitUnstaked(address staker,uint256 principal,uint256 baseReward,uint256 delegationReward) public {
        emit Unstaked(staker,principal,baseReward,delegationReward);
    }
}
