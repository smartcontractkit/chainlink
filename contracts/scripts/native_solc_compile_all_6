#!/usr/bin/env bash

set -e

echo " ┌──────────────────────────────────────────────┐"
echo " │  Compiling legacy Solidity 0.6 contracts...  │"
echo " └──────────────────────────────────────────────┘"

SOLC_VERSION="0.6.6"
OPTIMIZE_RUNS=1000000


SCRIPTPATH="$( cd "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"
ROOT="$( cd "$(dirname "$0")" >/dev/null 2>&1 ; cd ../../ && pwd -P )"
python3 -m pip install --require-hashes -r $SCRIPTPATH/requirements.txt

solc-select install $SOLC_VERSION
solc-select use $SOLC_VERSION
export SOLC_VERSION=$SOLC_VERSION


compileContract () {
  solc --overwrite --optimize --optimize-runs $OPTIMIZE_RUNS --metadata-hash none \
      -o $ROOT/contracts/solc/v0.6 \
      --abi --bin --allow-paths $ROOT/contracts/src/v0.6 \
      $ROOT/contracts/src/v0.6/$1
}

compileContract Flags.sol
compileContract Oracle.sol
compileContract FluxAggregator.sol
compileContract VRF.sol
compileContract VRFCoordinator.sol
compileContract tests/VRFRequestIDBaseTestHelper.sol
compileContract tests/VRFTestHelper.sol
compileContract Chainlink.sol
compileContract VRFRequestIDBase.sol
compileContract tests/VRFConsumer.sol
compileContract ChainlinkClient.sol
compileContract VRFConsumerBase.sol
compileContract BlockhashStore.sol
compileContract tests/TestAPIConsumer.sol
compileContract tests/MockETHLINKAggregator.sol
compileContract tests/MockGASAggregator.sol